/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)

// BuiltInConnectors the model 'BuiltInConnectors'
type BuiltInConnectors string

// List of BuiltInConnectors
const (
	BUILTINCONNECTORS_WEB_SEARCH BuiltInConnectors = "web_search"
	BUILTINCONNECTORS_WEB_SEARCH_PREMIUM BuiltInConnectors = "web_search_premium"
	BUILTINCONNECTORS_CODE_INTERPRETER BuiltInConnectors = "code_interpreter"
	BUILTINCONNECTORS_IMAGE_GENERATION BuiltInConnectors = "image_generation"
	BUILTINCONNECTORS_DOCUMENT_LIBRARY BuiltInConnectors = "document_library"
)

// All allowed values of BuiltInConnectors enum
var AllowedBuiltInConnectorsEnumValues = []BuiltInConnectors{
	"web_search",
	"web_search_premium",
	"code_interpreter",
	"image_generation",
	"document_library",
}

func (v *BuiltInConnectors) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := BuiltInConnectors(value)
	for _, existing := range AllowedBuiltInConnectorsEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid BuiltInConnectors", value)
}

// NewBuiltInConnectorsFromValue returns a pointer to a valid BuiltInConnectors
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewBuiltInConnectorsFromValue(v string) (*BuiltInConnectors, error) {
	ev := BuiltInConnectors(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for BuiltInConnectors: valid values are %v", v, AllowedBuiltInConnectorsEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v BuiltInConnectors) IsValid() bool {
	for _, existing := range AllowedBuiltInConnectorsEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to BuiltInConnectors value
func (v BuiltInConnectors) Ptr() *BuiltInConnectors {
	return &v
}

type NullableBuiltInConnectors struct {
	value *BuiltInConnectors
	isSet bool
}

func (v NullableBuiltInConnectors) Get() *BuiltInConnectors {
	return v.value
}

func (v *NullableBuiltInConnectors) Set(val *BuiltInConnectors) {
	v.value = val
	v.isSet = true
}

func (v NullableBuiltInConnectors) IsSet() bool {
	return v.isSet
}

func (v *NullableBuiltInConnectors) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBuiltInConnectors(val *BuiltInConnectors) *NullableBuiltInConnectors {
	return &NullableBuiltInConnectors{value: val, isSet: true}
}

func (v NullableBuiltInConnectors) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBuiltInConnectors) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

