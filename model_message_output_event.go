/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"time"
	"fmt"
)

// checks if the MessageOutputEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MessageOutputEvent{}

// MessageOutputEvent struct for MessageOutputEvent
type MessageOutputEvent struct {
	Type *string `json:"type,omitempty"`
	CreatedAt *time.Time `json:"created_at,omitempty"`
	OutputIndex *int32 `json:"output_index,omitempty"`
	Id string `json:"id"`
	ContentIndex *int32 `json:"content_index,omitempty"`
	Model NullableString `json:"model,omitempty"`
	AgentId NullableString `json:"agent_id,omitempty"`
	Role *string `json:"role,omitempty"`
	Content Content2 `json:"content"`
	AdditionalProperties map[string]interface{}
}

type _MessageOutputEvent MessageOutputEvent

// NewMessageOutputEvent instantiates a new MessageOutputEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMessageOutputEvent(id string, content Content2) *MessageOutputEvent {
	this := MessageOutputEvent{}
	var type_ string = "message.output.delta"
	this.Type = &type_
	var outputIndex int32 = 0
	this.OutputIndex = &outputIndex
	this.Id = id
	var contentIndex int32 = 0
	this.ContentIndex = &contentIndex
	var role string = "assistant"
	this.Role = &role
	this.Content = content
	return &this
}

// NewMessageOutputEventWithDefaults instantiates a new MessageOutputEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMessageOutputEventWithDefaults() *MessageOutputEvent {
	this := MessageOutputEvent{}
	var type_ string = "message.output.delta"
	this.Type = &type_
	var outputIndex int32 = 0
	this.OutputIndex = &outputIndex
	var contentIndex int32 = 0
	this.ContentIndex = &contentIndex
	var role string = "assistant"
	this.Role = &role
	return &this
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *MessageOutputEvent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageOutputEvent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *MessageOutputEvent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *MessageOutputEvent) SetType(v string) {
	o.Type = &v
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *MessageOutputEvent) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageOutputEvent) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *MessageOutputEvent) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *MessageOutputEvent) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetOutputIndex returns the OutputIndex field value if set, zero value otherwise.
func (o *MessageOutputEvent) GetOutputIndex() int32 {
	if o == nil || IsNil(o.OutputIndex) {
		var ret int32
		return ret
	}
	return *o.OutputIndex
}

// GetOutputIndexOk returns a tuple with the OutputIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageOutputEvent) GetOutputIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.OutputIndex) {
		return nil, false
	}
	return o.OutputIndex, true
}

// HasOutputIndex returns a boolean if a field has been set.
func (o *MessageOutputEvent) HasOutputIndex() bool {
	if o != nil && !IsNil(o.OutputIndex) {
		return true
	}

	return false
}

// SetOutputIndex gets a reference to the given int32 and assigns it to the OutputIndex field.
func (o *MessageOutputEvent) SetOutputIndex(v int32) {
	o.OutputIndex = &v
}

// GetId returns the Id field value
func (o *MessageOutputEvent) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *MessageOutputEvent) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *MessageOutputEvent) SetId(v string) {
	o.Id = v
}

// GetContentIndex returns the ContentIndex field value if set, zero value otherwise.
func (o *MessageOutputEvent) GetContentIndex() int32 {
	if o == nil || IsNil(o.ContentIndex) {
		var ret int32
		return ret
	}
	return *o.ContentIndex
}

// GetContentIndexOk returns a tuple with the ContentIndex field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageOutputEvent) GetContentIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.ContentIndex) {
		return nil, false
	}
	return o.ContentIndex, true
}

// HasContentIndex returns a boolean if a field has been set.
func (o *MessageOutputEvent) HasContentIndex() bool {
	if o != nil && !IsNil(o.ContentIndex) {
		return true
	}

	return false
}

// SetContentIndex gets a reference to the given int32 and assigns it to the ContentIndex field.
func (o *MessageOutputEvent) SetContentIndex(v int32) {
	o.ContentIndex = &v
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MessageOutputEvent) GetModel() string {
	if o == nil || IsNil(o.Model.Get()) {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageOutputEvent) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *MessageOutputEvent) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *MessageOutputEvent) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *MessageOutputEvent) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *MessageOutputEvent) UnsetModel() {
	o.Model.Unset()
}

// GetAgentId returns the AgentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *MessageOutputEvent) GetAgentId() string {
	if o == nil || IsNil(o.AgentId.Get()) {
		var ret string
		return ret
	}
	return *o.AgentId.Get()
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *MessageOutputEvent) GetAgentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgentId.Get(), o.AgentId.IsSet()
}

// HasAgentId returns a boolean if a field has been set.
func (o *MessageOutputEvent) HasAgentId() bool {
	if o != nil && o.AgentId.IsSet() {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given NullableString and assigns it to the AgentId field.
func (o *MessageOutputEvent) SetAgentId(v string) {
	o.AgentId.Set(&v)
}
// SetAgentIdNil sets the value for AgentId to be an explicit nil
func (o *MessageOutputEvent) SetAgentIdNil() {
	o.AgentId.Set(nil)
}

// UnsetAgentId ensures that no value is present for AgentId, not even an explicit nil
func (o *MessageOutputEvent) UnsetAgentId() {
	o.AgentId.Unset()
}

// GetRole returns the Role field value if set, zero value otherwise.
func (o *MessageOutputEvent) GetRole() string {
	if o == nil || IsNil(o.Role) {
		var ret string
		return ret
	}
	return *o.Role
}

// GetRoleOk returns a tuple with the Role field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MessageOutputEvent) GetRoleOk() (*string, bool) {
	if o == nil || IsNil(o.Role) {
		return nil, false
	}
	return o.Role, true
}

// HasRole returns a boolean if a field has been set.
func (o *MessageOutputEvent) HasRole() bool {
	if o != nil && !IsNil(o.Role) {
		return true
	}

	return false
}

// SetRole gets a reference to the given string and assigns it to the Role field.
func (o *MessageOutputEvent) SetRole(v string) {
	o.Role = &v
}

// GetContent returns the Content field value
func (o *MessageOutputEvent) GetContent() Content2 {
	if o == nil {
		var ret Content2
		return ret
	}

	return o.Content
}

// GetContentOk returns a tuple with the Content field value
// and a boolean to check if the value has been set.
func (o *MessageOutputEvent) GetContentOk() (*Content2, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Content, true
}

// SetContent sets field value
func (o *MessageOutputEvent) SetContent(v Content2) {
	o.Content = v
}

func (o MessageOutputEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MessageOutputEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.OutputIndex) {
		toSerialize["output_index"] = o.OutputIndex
	}
	toSerialize["id"] = o.Id
	if !IsNil(o.ContentIndex) {
		toSerialize["content_index"] = o.ContentIndex
	}
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	if o.AgentId.IsSet() {
		toSerialize["agent_id"] = o.AgentId.Get()
	}
	if !IsNil(o.Role) {
		toSerialize["role"] = o.Role
	}
	toSerialize["content"] = o.Content

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *MessageOutputEvent) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"content",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMessageOutputEvent := _MessageOutputEvent{}

	err = json.Unmarshal(data, &varMessageOutputEvent)

	if err != nil {
		return err
	}

	*o = MessageOutputEvent(varMessageOutputEvent)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "type")
		delete(additionalProperties, "created_at")
		delete(additionalProperties, "output_index")
		delete(additionalProperties, "id")
		delete(additionalProperties, "content_index")
		delete(additionalProperties, "model")
		delete(additionalProperties, "agent_id")
		delete(additionalProperties, "role")
		delete(additionalProperties, "content")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableMessageOutputEvent struct {
	value *MessageOutputEvent
	isSet bool
}

func (v NullableMessageOutputEvent) Get() *MessageOutputEvent {
	return v.value
}

func (v *NullableMessageOutputEvent) Set(val *MessageOutputEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageOutputEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageOutputEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageOutputEvent(val *MessageOutputEvent) *NullableMessageOutputEvent {
	return &NullableMessageOutputEvent{value: val, isSet: true}
}

func (v NullableMessageOutputEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageOutputEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


