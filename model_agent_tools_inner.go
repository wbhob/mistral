/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
	"gopkg.in/validator.v2"
)

// AgentToolsInner - struct for AgentToolsInner
type AgentToolsInner struct {
	CodeInterpreterTool *CodeInterpreterTool
	DocumentLibraryTool *DocumentLibraryTool
	FunctionTool *FunctionTool
	ImageGenerationTool *ImageGenerationTool
	WebSearchPremiumTool *WebSearchPremiumTool
	WebSearchTool *WebSearchTool
}

// CodeInterpreterToolAsAgentToolsInner is a convenience function that returns CodeInterpreterTool wrapped in AgentToolsInner
func CodeInterpreterToolAsAgentToolsInner(v *CodeInterpreterTool) AgentToolsInner {
	return AgentToolsInner{
		CodeInterpreterTool: v,
	}
}

// DocumentLibraryToolAsAgentToolsInner is a convenience function that returns DocumentLibraryTool wrapped in AgentToolsInner
func DocumentLibraryToolAsAgentToolsInner(v *DocumentLibraryTool) AgentToolsInner {
	return AgentToolsInner{
		DocumentLibraryTool: v,
	}
}

// FunctionToolAsAgentToolsInner is a convenience function that returns FunctionTool wrapped in AgentToolsInner
func FunctionToolAsAgentToolsInner(v *FunctionTool) AgentToolsInner {
	return AgentToolsInner{
		FunctionTool: v,
	}
}

// ImageGenerationToolAsAgentToolsInner is a convenience function that returns ImageGenerationTool wrapped in AgentToolsInner
func ImageGenerationToolAsAgentToolsInner(v *ImageGenerationTool) AgentToolsInner {
	return AgentToolsInner{
		ImageGenerationTool: v,
	}
}

// WebSearchPremiumToolAsAgentToolsInner is a convenience function that returns WebSearchPremiumTool wrapped in AgentToolsInner
func WebSearchPremiumToolAsAgentToolsInner(v *WebSearchPremiumTool) AgentToolsInner {
	return AgentToolsInner{
		WebSearchPremiumTool: v,
	}
}

// WebSearchToolAsAgentToolsInner is a convenience function that returns WebSearchTool wrapped in AgentToolsInner
func WebSearchToolAsAgentToolsInner(v *WebSearchTool) AgentToolsInner {
	return AgentToolsInner{
		WebSearchTool: v,
	}
}


// Unmarshal JSON data into one of the pointers in the struct
func (dst *AgentToolsInner) UnmarshalJSON(data []byte) error {
	var err error
	match := 0
	// try to unmarshal data into CodeInterpreterTool
	err = newStrictDecoder(data).Decode(&dst.CodeInterpreterTool)
	if err == nil {
		jsonCodeInterpreterTool, _ := json.Marshal(dst.CodeInterpreterTool)
		if string(jsonCodeInterpreterTool) == "{}" { // empty struct
			dst.CodeInterpreterTool = nil
		} else {
			if err = validator.Validate(dst.CodeInterpreterTool); err != nil {
				dst.CodeInterpreterTool = nil
			} else {
				match++
			}
		}
	} else {
		dst.CodeInterpreterTool = nil
	}

	// try to unmarshal data into DocumentLibraryTool
	err = newStrictDecoder(data).Decode(&dst.DocumentLibraryTool)
	if err == nil {
		jsonDocumentLibraryTool, _ := json.Marshal(dst.DocumentLibraryTool)
		if string(jsonDocumentLibraryTool) == "{}" { // empty struct
			dst.DocumentLibraryTool = nil
		} else {
			if err = validator.Validate(dst.DocumentLibraryTool); err != nil {
				dst.DocumentLibraryTool = nil
			} else {
				match++
			}
		}
	} else {
		dst.DocumentLibraryTool = nil
	}

	// try to unmarshal data into FunctionTool
	err = newStrictDecoder(data).Decode(&dst.FunctionTool)
	if err == nil {
		jsonFunctionTool, _ := json.Marshal(dst.FunctionTool)
		if string(jsonFunctionTool) == "{}" { // empty struct
			dst.FunctionTool = nil
		} else {
			if err = validator.Validate(dst.FunctionTool); err != nil {
				dst.FunctionTool = nil
			} else {
				match++
			}
		}
	} else {
		dst.FunctionTool = nil
	}

	// try to unmarshal data into ImageGenerationTool
	err = newStrictDecoder(data).Decode(&dst.ImageGenerationTool)
	if err == nil {
		jsonImageGenerationTool, _ := json.Marshal(dst.ImageGenerationTool)
		if string(jsonImageGenerationTool) == "{}" { // empty struct
			dst.ImageGenerationTool = nil
		} else {
			if err = validator.Validate(dst.ImageGenerationTool); err != nil {
				dst.ImageGenerationTool = nil
			} else {
				match++
			}
		}
	} else {
		dst.ImageGenerationTool = nil
	}

	// try to unmarshal data into WebSearchPremiumTool
	err = newStrictDecoder(data).Decode(&dst.WebSearchPremiumTool)
	if err == nil {
		jsonWebSearchPremiumTool, _ := json.Marshal(dst.WebSearchPremiumTool)
		if string(jsonWebSearchPremiumTool) == "{}" { // empty struct
			dst.WebSearchPremiumTool = nil
		} else {
			if err = validator.Validate(dst.WebSearchPremiumTool); err != nil {
				dst.WebSearchPremiumTool = nil
			} else {
				match++
			}
		}
	} else {
		dst.WebSearchPremiumTool = nil
	}

	// try to unmarshal data into WebSearchTool
	err = newStrictDecoder(data).Decode(&dst.WebSearchTool)
	if err == nil {
		jsonWebSearchTool, _ := json.Marshal(dst.WebSearchTool)
		if string(jsonWebSearchTool) == "{}" { // empty struct
			dst.WebSearchTool = nil
		} else {
			if err = validator.Validate(dst.WebSearchTool); err != nil {
				dst.WebSearchTool = nil
			} else {
				match++
			}
		}
	} else {
		dst.WebSearchTool = nil
	}

	if match > 1 { // more than 1 match
		// reset to nil
		dst.CodeInterpreterTool = nil
		dst.DocumentLibraryTool = nil
		dst.FunctionTool = nil
		dst.ImageGenerationTool = nil
		dst.WebSearchPremiumTool = nil
		dst.WebSearchTool = nil

		return fmt.Errorf("data matches more than one schema in oneOf(AgentToolsInner)")
	} else if match == 1 {
		return nil // exactly one match
	} else { // no match
		return fmt.Errorf("data failed to match schemas in oneOf(AgentToolsInner)")
	}
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src AgentToolsInner) MarshalJSON() ([]byte, error) {
	if src.CodeInterpreterTool != nil {
		return json.Marshal(&src.CodeInterpreterTool)
	}

	if src.DocumentLibraryTool != nil {
		return json.Marshal(&src.DocumentLibraryTool)
	}

	if src.FunctionTool != nil {
		return json.Marshal(&src.FunctionTool)
	}

	if src.ImageGenerationTool != nil {
		return json.Marshal(&src.ImageGenerationTool)
	}

	if src.WebSearchPremiumTool != nil {
		return json.Marshal(&src.WebSearchPremiumTool)
	}

	if src.WebSearchTool != nil {
		return json.Marshal(&src.WebSearchTool)
	}

	return nil, nil // no data in oneOf schemas
}

// Get the actual instance
func (obj *AgentToolsInner) GetActualInstance() (interface{}) {
	if obj == nil {
		return nil
	}
	if obj.CodeInterpreterTool != nil {
		return obj.CodeInterpreterTool
	}

	if obj.DocumentLibraryTool != nil {
		return obj.DocumentLibraryTool
	}

	if obj.FunctionTool != nil {
		return obj.FunctionTool
	}

	if obj.ImageGenerationTool != nil {
		return obj.ImageGenerationTool
	}

	if obj.WebSearchPremiumTool != nil {
		return obj.WebSearchPremiumTool
	}

	if obj.WebSearchTool != nil {
		return obj.WebSearchTool
	}

	// all schemas are nil
	return nil
}

// Get the actual instance value
func (obj AgentToolsInner) GetActualInstanceValue() (interface{}) {
	if obj.CodeInterpreterTool != nil {
		return *obj.CodeInterpreterTool
	}

	if obj.DocumentLibraryTool != nil {
		return *obj.DocumentLibraryTool
	}

	if obj.FunctionTool != nil {
		return *obj.FunctionTool
	}

	if obj.ImageGenerationTool != nil {
		return *obj.ImageGenerationTool
	}

	if obj.WebSearchPremiumTool != nil {
		return *obj.WebSearchPremiumTool
	}

	if obj.WebSearchTool != nil {
		return *obj.WebSearchTool
	}

	// all schemas are nil
	return nil
}

type NullableAgentToolsInner struct {
	value *AgentToolsInner
	isSet bool
}

func (v NullableAgentToolsInner) Get() *AgentToolsInner {
	return v.value
}

func (v *NullableAgentToolsInner) Set(val *AgentToolsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableAgentToolsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableAgentToolsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAgentToolsInner(val *AgentToolsInner) *NullableAgentToolsInner {
	return &NullableAgentToolsInner{value: val, isSet: true}
}

func (v NullableAgentToolsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAgentToolsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


