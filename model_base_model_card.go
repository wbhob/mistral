/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the BaseModelCard type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BaseModelCard{}

// BaseModelCard struct for BaseModelCard
type BaseModelCard struct {
	Id string `json:"id"`
	Object *string `json:"object,omitempty"`
	Created *int32 `json:"created,omitempty"`
	OwnedBy *string `json:"owned_by,omitempty"`
	Capabilities ModelCapabilities `json:"capabilities"`
	Name NullableString `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	MaxContextLength *int32 `json:"max_context_length,omitempty"`
	Aliases []string `json:"aliases,omitempty"`
	Deprecation NullableTime `json:"deprecation,omitempty"`
	DefaultModelTemperature NullableFloat32 `json:"default_model_temperature,omitempty"`
	Type *string `json:"type,omitempty"`
}

type _BaseModelCard BaseModelCard

// NewBaseModelCard instantiates a new BaseModelCard object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBaseModelCard(id string, capabilities ModelCapabilities) *BaseModelCard {
	this := BaseModelCard{}
	this.Id = id
	var object string = "model"
	this.Object = &object
	var ownedBy string = "mistralai"
	this.OwnedBy = &ownedBy
	this.Capabilities = capabilities
	var maxContextLength int32 = 32768
	this.MaxContextLength = &maxContextLength
	var type_ string = "base"
	this.Type = &type_
	return &this
}

// NewBaseModelCardWithDefaults instantiates a new BaseModelCard object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBaseModelCardWithDefaults() *BaseModelCard {
	this := BaseModelCard{}
	var object string = "model"
	this.Object = &object
	var ownedBy string = "mistralai"
	this.OwnedBy = &ownedBy
	var maxContextLength int32 = 32768
	this.MaxContextLength = &maxContextLength
	var type_ string = "base"
	this.Type = &type_
	return &this
}

// GetId returns the Id field value
func (o *BaseModelCard) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BaseModelCard) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *BaseModelCard) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *BaseModelCard) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *BaseModelCard) SetObject(v string) {
	o.Object = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *BaseModelCard) GetCreated() int32 {
	if o == nil || IsNil(o.Created) {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetCreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *BaseModelCard) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *BaseModelCard) SetCreated(v int32) {
	o.Created = &v
}

// GetOwnedBy returns the OwnedBy field value if set, zero value otherwise.
func (o *BaseModelCard) GetOwnedBy() string {
	if o == nil || IsNil(o.OwnedBy) {
		var ret string
		return ret
	}
	return *o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetOwnedByOk() (*string, bool) {
	if o == nil || IsNil(o.OwnedBy) {
		return nil, false
	}
	return o.OwnedBy, true
}

// HasOwnedBy returns a boolean if a field has been set.
func (o *BaseModelCard) HasOwnedBy() bool {
	if o != nil && !IsNil(o.OwnedBy) {
		return true
	}

	return false
}

// SetOwnedBy gets a reference to the given string and assigns it to the OwnedBy field.
func (o *BaseModelCard) SetOwnedBy(v string) {
	o.OwnedBy = &v
}

// GetCapabilities returns the Capabilities field value
func (o *BaseModelCard) GetCapabilities() ModelCapabilities {
	if o == nil {
		var ret ModelCapabilities
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetCapabilitiesOk() (*ModelCapabilities, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// SetCapabilities sets field value
func (o *BaseModelCard) SetCapabilities(v ModelCapabilities) {
	o.Capabilities = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseModelCard) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseModelCard) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *BaseModelCard) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *BaseModelCard) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *BaseModelCard) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *BaseModelCard) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseModelCard) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseModelCard) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *BaseModelCard) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *BaseModelCard) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *BaseModelCard) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *BaseModelCard) UnsetDescription() {
	o.Description.Unset()
}

// GetMaxContextLength returns the MaxContextLength field value if set, zero value otherwise.
func (o *BaseModelCard) GetMaxContextLength() int32 {
	if o == nil || IsNil(o.MaxContextLength) {
		var ret int32
		return ret
	}
	return *o.MaxContextLength
}

// GetMaxContextLengthOk returns a tuple with the MaxContextLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetMaxContextLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxContextLength) {
		return nil, false
	}
	return o.MaxContextLength, true
}

// HasMaxContextLength returns a boolean if a field has been set.
func (o *BaseModelCard) HasMaxContextLength() bool {
	if o != nil && !IsNil(o.MaxContextLength) {
		return true
	}

	return false
}

// SetMaxContextLength gets a reference to the given int32 and assigns it to the MaxContextLength field.
func (o *BaseModelCard) SetMaxContextLength(v int32) {
	o.MaxContextLength = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *BaseModelCard) GetAliases() []string {
	if o == nil || IsNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *BaseModelCard) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *BaseModelCard) SetAliases(v []string) {
	o.Aliases = v
}

// GetDeprecation returns the Deprecation field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseModelCard) GetDeprecation() time.Time {
	if o == nil || IsNil(o.Deprecation.Get()) {
		var ret time.Time
		return ret
	}
	return *o.Deprecation.Get()
}

// GetDeprecationOk returns a tuple with the Deprecation field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseModelCard) GetDeprecationOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return o.Deprecation.Get(), o.Deprecation.IsSet()
}

// HasDeprecation returns a boolean if a field has been set.
func (o *BaseModelCard) HasDeprecation() bool {
	if o != nil && o.Deprecation.IsSet() {
		return true
	}

	return false
}

// SetDeprecation gets a reference to the given NullableTime and assigns it to the Deprecation field.
func (o *BaseModelCard) SetDeprecation(v time.Time) {
	o.Deprecation.Set(&v)
}
// SetDeprecationNil sets the value for Deprecation to be an explicit nil
func (o *BaseModelCard) SetDeprecationNil() {
	o.Deprecation.Set(nil)
}

// UnsetDeprecation ensures that no value is present for Deprecation, not even an explicit nil
func (o *BaseModelCard) UnsetDeprecation() {
	o.Deprecation.Unset()
}

// GetDefaultModelTemperature returns the DefaultModelTemperature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BaseModelCard) GetDefaultModelTemperature() float32 {
	if o == nil || IsNil(o.DefaultModelTemperature.Get()) {
		var ret float32
		return ret
	}
	return *o.DefaultModelTemperature.Get()
}

// GetDefaultModelTemperatureOk returns a tuple with the DefaultModelTemperature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BaseModelCard) GetDefaultModelTemperatureOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DefaultModelTemperature.Get(), o.DefaultModelTemperature.IsSet()
}

// HasDefaultModelTemperature returns a boolean if a field has been set.
func (o *BaseModelCard) HasDefaultModelTemperature() bool {
	if o != nil && o.DefaultModelTemperature.IsSet() {
		return true
	}

	return false
}

// SetDefaultModelTemperature gets a reference to the given NullableFloat32 and assigns it to the DefaultModelTemperature field.
func (o *BaseModelCard) SetDefaultModelTemperature(v float32) {
	o.DefaultModelTemperature.Set(&v)
}
// SetDefaultModelTemperatureNil sets the value for DefaultModelTemperature to be an explicit nil
func (o *BaseModelCard) SetDefaultModelTemperatureNil() {
	o.DefaultModelTemperature.Set(nil)
}

// UnsetDefaultModelTemperature ensures that no value is present for DefaultModelTemperature, not even an explicit nil
func (o *BaseModelCard) UnsetDefaultModelTemperature() {
	o.DefaultModelTemperature.Unset()
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *BaseModelCard) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BaseModelCard) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *BaseModelCard) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *BaseModelCard) SetType(v string) {
	o.Type = &v
}

func (o BaseModelCard) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BaseModelCard) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.OwnedBy) {
		toSerialize["owned_by"] = o.OwnedBy
	}
	toSerialize["capabilities"] = o.Capabilities
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if !IsNil(o.MaxContextLength) {
		toSerialize["max_context_length"] = o.MaxContextLength
	}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	if o.Deprecation.IsSet() {
		toSerialize["deprecation"] = o.Deprecation.Get()
	}
	if o.DefaultModelTemperature.IsSet() {
		toSerialize["default_model_temperature"] = o.DefaultModelTemperature.Get()
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

func (o *BaseModelCard) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"capabilities",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBaseModelCard := _BaseModelCard{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBaseModelCard)

	if err != nil {
		return err
	}

	*o = BaseModelCard(varBaseModelCard)

	return err
}

type NullableBaseModelCard struct {
	value *BaseModelCard
	isSet bool
}

func (v NullableBaseModelCard) Get() *BaseModelCard {
	return v.value
}

func (v *NullableBaseModelCard) Set(val *BaseModelCard) {
	v.value = val
	v.isSet = true
}

func (v NullableBaseModelCard) IsSet() bool {
	return v.isSet
}

func (v *NullableBaseModelCard) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBaseModelCard(val *BaseModelCard) *NullableBaseModelCard {
	return &NullableBaseModelCard{value: val, isSet: true}
}

func (v NullableBaseModelCard) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBaseModelCard) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


