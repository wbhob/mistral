/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)


// MessageEntriesInner struct for MessageEntriesInner
type MessageEntriesInner struct {
	MessageInputEntry *MessageInputEntry
	MessageOutputEntry *MessageOutputEntry
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *MessageEntriesInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into MessageInputEntry
	err = json.Unmarshal(data, &dst.MessageInputEntry);
	if err == nil {
		jsonMessageInputEntry, _ := json.Marshal(dst.MessageInputEntry)
		if string(jsonMessageInputEntry) == "{}" { // empty struct
			dst.MessageInputEntry = nil
		} else {
			return nil // data stored in dst.MessageInputEntry, return on the first match
		}
	} else {
		dst.MessageInputEntry = nil
	}

	// try to unmarshal JSON data into MessageOutputEntry
	err = json.Unmarshal(data, &dst.MessageOutputEntry);
	if err == nil {
		jsonMessageOutputEntry, _ := json.Marshal(dst.MessageOutputEntry)
		if string(jsonMessageOutputEntry) == "{}" { // empty struct
			dst.MessageOutputEntry = nil
		} else {
			return nil // data stored in dst.MessageOutputEntry, return on the first match
		}
	} else {
		dst.MessageOutputEntry = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(MessageEntriesInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src MessageEntriesInner) MarshalJSON() ([]byte, error) {
	if src.MessageInputEntry != nil {
		return json.Marshal(&src.MessageInputEntry)
	}

	if src.MessageOutputEntry != nil {
		return json.Marshal(&src.MessageOutputEntry)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableMessageEntriesInner struct {
	value *MessageEntriesInner
	isSet bool
}

func (v NullableMessageEntriesInner) Get() *MessageEntriesInner {
	return v.value
}

func (v *NullableMessageEntriesInner) Set(val *MessageEntriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableMessageEntriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableMessageEntriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMessageEntriesInner(val *MessageEntriesInner) *NullableMessageEntriesInner {
	return &NullableMessageEntriesInner{value: val, isSet: true}
}

func (v NullableMessageEntriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMessageEntriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


