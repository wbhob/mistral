/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FTModelOut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FTModelOut{}

// FTModelOut struct for FTModelOut
type FTModelOut struct {
	Id string `json:"id"`
	Object *string `json:"object,omitempty"`
	Created int32 `json:"created"`
	OwnedBy string `json:"owned_by"`
	Root string `json:"root"`
	Archived bool `json:"archived"`
	Name NullableString `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	Capabilities FTModelCapabilitiesOut `json:"capabilities"`
	MaxContextLength *int32 `json:"max_context_length,omitempty"`
	Aliases []string `json:"aliases,omitempty"`
	Job string `json:"job"`
}

type _FTModelOut FTModelOut

// NewFTModelOut instantiates a new FTModelOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFTModelOut(id string, created int32, ownedBy string, root string, archived bool, capabilities FTModelCapabilitiesOut, job string) *FTModelOut {
	this := FTModelOut{}
	this.Id = id
	var object string = "model"
	this.Object = &object
	this.Created = created
	this.OwnedBy = ownedBy
	this.Root = root
	this.Archived = archived
	this.Capabilities = capabilities
	var maxContextLength int32 = 32768
	this.MaxContextLength = &maxContextLength
	this.Job = job
	return &this
}

// NewFTModelOutWithDefaults instantiates a new FTModelOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFTModelOutWithDefaults() *FTModelOut {
	this := FTModelOut{}
	var object string = "model"
	this.Object = &object
	var maxContextLength int32 = 32768
	this.MaxContextLength = &maxContextLength
	return &this
}

// GetId returns the Id field value
func (o *FTModelOut) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *FTModelOut) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *FTModelOut) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *FTModelOut) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *FTModelOut) SetObject(v string) {
	o.Object = &v
}

// GetCreated returns the Created field value
func (o *FTModelOut) GetCreated() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetCreatedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *FTModelOut) SetCreated(v int32) {
	o.Created = v
}

// GetOwnedBy returns the OwnedBy field value
func (o *FTModelOut) GetOwnedBy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.OwnedBy
}

// GetOwnedByOk returns a tuple with the OwnedBy field value
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetOwnedByOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnedBy, true
}

// SetOwnedBy sets field value
func (o *FTModelOut) SetOwnedBy(v string) {
	o.OwnedBy = v
}

// GetRoot returns the Root field value
func (o *FTModelOut) GetRoot() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Root
}

// GetRootOk returns a tuple with the Root field value
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetRootOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Root, true
}

// SetRoot sets field value
func (o *FTModelOut) SetRoot(v string) {
	o.Root = v
}

// GetArchived returns the Archived field value
func (o *FTModelOut) GetArchived() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Archived
}

// GetArchivedOk returns a tuple with the Archived field value
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetArchivedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Archived, true
}

// SetArchived sets field value
func (o *FTModelOut) SetArchived(v bool) {
	o.Archived = v
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FTModelOut) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FTModelOut) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *FTModelOut) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *FTModelOut) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *FTModelOut) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *FTModelOut) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FTModelOut) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FTModelOut) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *FTModelOut) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *FTModelOut) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *FTModelOut) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *FTModelOut) UnsetDescription() {
	o.Description.Unset()
}

// GetCapabilities returns the Capabilities field value
func (o *FTModelOut) GetCapabilities() FTModelCapabilitiesOut {
	if o == nil {
		var ret FTModelCapabilitiesOut
		return ret
	}

	return o.Capabilities
}

// GetCapabilitiesOk returns a tuple with the Capabilities field value
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetCapabilitiesOk() (*FTModelCapabilitiesOut, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Capabilities, true
}

// SetCapabilities sets field value
func (o *FTModelOut) SetCapabilities(v FTModelCapabilitiesOut) {
	o.Capabilities = v
}

// GetMaxContextLength returns the MaxContextLength field value if set, zero value otherwise.
func (o *FTModelOut) GetMaxContextLength() int32 {
	if o == nil || IsNil(o.MaxContextLength) {
		var ret int32
		return ret
	}
	return *o.MaxContextLength
}

// GetMaxContextLengthOk returns a tuple with the MaxContextLength field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetMaxContextLengthOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxContextLength) {
		return nil, false
	}
	return o.MaxContextLength, true
}

// HasMaxContextLength returns a boolean if a field has been set.
func (o *FTModelOut) HasMaxContextLength() bool {
	if o != nil && !IsNil(o.MaxContextLength) {
		return true
	}

	return false
}

// SetMaxContextLength gets a reference to the given int32 and assigns it to the MaxContextLength field.
func (o *FTModelOut) SetMaxContextLength(v int32) {
	o.MaxContextLength = &v
}

// GetAliases returns the Aliases field value if set, zero value otherwise.
func (o *FTModelOut) GetAliases() []string {
	if o == nil || IsNil(o.Aliases) {
		var ret []string
		return ret
	}
	return o.Aliases
}

// GetAliasesOk returns a tuple with the Aliases field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetAliasesOk() ([]string, bool) {
	if o == nil || IsNil(o.Aliases) {
		return nil, false
	}
	return o.Aliases, true
}

// HasAliases returns a boolean if a field has been set.
func (o *FTModelOut) HasAliases() bool {
	if o != nil && !IsNil(o.Aliases) {
		return true
	}

	return false
}

// SetAliases gets a reference to the given []string and assigns it to the Aliases field.
func (o *FTModelOut) SetAliases(v []string) {
	o.Aliases = v
}

// GetJob returns the Job field value
func (o *FTModelOut) GetJob() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Job
}

// GetJobOk returns a tuple with the Job field value
// and a boolean to check if the value has been set.
func (o *FTModelOut) GetJobOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Job, true
}

// SetJob sets field value
func (o *FTModelOut) SetJob(v string) {
	o.Job = v
}

func (o FTModelOut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FTModelOut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["created"] = o.Created
	toSerialize["owned_by"] = o.OwnedBy
	toSerialize["root"] = o.Root
	toSerialize["archived"] = o.Archived
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	toSerialize["capabilities"] = o.Capabilities
	if !IsNil(o.MaxContextLength) {
		toSerialize["max_context_length"] = o.MaxContextLength
	}
	if !IsNil(o.Aliases) {
		toSerialize["aliases"] = o.Aliases
	}
	toSerialize["job"] = o.Job
	return toSerialize, nil
}

func (o *FTModelOut) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"created",
		"owned_by",
		"root",
		"archived",
		"capabilities",
		"job",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFTModelOut := _FTModelOut{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFTModelOut)

	if err != nil {
		return err
	}

	*o = FTModelOut(varFTModelOut)

	return err
}

type NullableFTModelOut struct {
	value *FTModelOut
	isSet bool
}

func (v NullableFTModelOut) Get() *FTModelOut {
	return v.value
}

func (v *NullableFTModelOut) Set(val *FTModelOut) {
	v.value = val
	v.isSet = true
}

func (v NullableFTModelOut) IsSet() bool {
	return v.isSet
}

func (v *NullableFTModelOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFTModelOut(val *FTModelOut) *NullableFTModelOut {
	return &NullableFTModelOut{value: val, isSet: true}
}

func (v NullableFTModelOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFTModelOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


