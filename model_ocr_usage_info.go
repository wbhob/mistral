/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)

// checks if the OCRUsageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OCRUsageInfo{}

// OCRUsageInfo struct for OCRUsageInfo
type OCRUsageInfo struct {
	// Number of pages processed
	PagesProcessed int32 `json:"pages_processed"`
	DocSizeBytes NullableInt32 `json:"doc_size_bytes,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _OCRUsageInfo OCRUsageInfo

// NewOCRUsageInfo instantiates a new OCRUsageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOCRUsageInfo(pagesProcessed int32) *OCRUsageInfo {
	this := OCRUsageInfo{}
	this.PagesProcessed = pagesProcessed
	return &this
}

// NewOCRUsageInfoWithDefaults instantiates a new OCRUsageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOCRUsageInfoWithDefaults() *OCRUsageInfo {
	this := OCRUsageInfo{}
	return &this
}

// GetPagesProcessed returns the PagesProcessed field value
func (o *OCRUsageInfo) GetPagesProcessed() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PagesProcessed
}

// GetPagesProcessedOk returns a tuple with the PagesProcessed field value
// and a boolean to check if the value has been set.
func (o *OCRUsageInfo) GetPagesProcessedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PagesProcessed, true
}

// SetPagesProcessed sets field value
func (o *OCRUsageInfo) SetPagesProcessed(v int32) {
	o.PagesProcessed = v
}

// GetDocSizeBytes returns the DocSizeBytes field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *OCRUsageInfo) GetDocSizeBytes() int32 {
	if o == nil || IsNil(o.DocSizeBytes.Get()) {
		var ret int32
		return ret
	}
	return *o.DocSizeBytes.Get()
}

// GetDocSizeBytesOk returns a tuple with the DocSizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OCRUsageInfo) GetDocSizeBytesOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.DocSizeBytes.Get(), o.DocSizeBytes.IsSet()
}

// HasDocSizeBytes returns a boolean if a field has been set.
func (o *OCRUsageInfo) HasDocSizeBytes() bool {
	if o != nil && o.DocSizeBytes.IsSet() {
		return true
	}

	return false
}

// SetDocSizeBytes gets a reference to the given NullableInt32 and assigns it to the DocSizeBytes field.
func (o *OCRUsageInfo) SetDocSizeBytes(v int32) {
	o.DocSizeBytes.Set(&v)
}
// SetDocSizeBytesNil sets the value for DocSizeBytes to be an explicit nil
func (o *OCRUsageInfo) SetDocSizeBytesNil() {
	o.DocSizeBytes.Set(nil)
}

// UnsetDocSizeBytes ensures that no value is present for DocSizeBytes, not even an explicit nil
func (o *OCRUsageInfo) UnsetDocSizeBytes() {
	o.DocSizeBytes.Unset()
}

func (o OCRUsageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OCRUsageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["pages_processed"] = o.PagesProcessed
	if o.DocSizeBytes.IsSet() {
		toSerialize["doc_size_bytes"] = o.DocSizeBytes.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OCRUsageInfo) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"pages_processed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOCRUsageInfo := _OCRUsageInfo{}

	err = json.Unmarshal(data, &varOCRUsageInfo)

	if err != nil {
		return err
	}

	*o = OCRUsageInfo(varOCRUsageInfo)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "pages_processed")
		delete(additionalProperties, "doc_size_bytes")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOCRUsageInfo struct {
	value *OCRUsageInfo
	isSet bool
}

func (v NullableOCRUsageInfo) Get() *OCRUsageInfo {
	return v.value
}

func (v *NullableOCRUsageInfo) Set(val *OCRUsageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableOCRUsageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableOCRUsageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOCRUsageInfo(val *OCRUsageInfo) *NullableOCRUsageInfo {
	return &NullableOCRUsageInfo{value: val, isSet: true}
}

func (v NullableOCRUsageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOCRUsageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


