/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
)

// checks if the EmbeddingResponseData type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &EmbeddingResponseData{}

// EmbeddingResponseData struct for EmbeddingResponseData
type EmbeddingResponseData struct {
	Object *string `json:"object,omitempty"`
	Embedding []float32 `json:"embedding,omitempty"`
	Index *int32 `json:"index,omitempty"`
}

// NewEmbeddingResponseData instantiates a new EmbeddingResponseData object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewEmbeddingResponseData() *EmbeddingResponseData {
	this := EmbeddingResponseData{}
	return &this
}

// NewEmbeddingResponseDataWithDefaults instantiates a new EmbeddingResponseData object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewEmbeddingResponseDataWithDefaults() *EmbeddingResponseData {
	this := EmbeddingResponseData{}
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *EmbeddingResponseData) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingResponseData) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *EmbeddingResponseData) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *EmbeddingResponseData) SetObject(v string) {
	o.Object = &v
}

// GetEmbedding returns the Embedding field value if set, zero value otherwise.
func (o *EmbeddingResponseData) GetEmbedding() []float32 {
	if o == nil || IsNil(o.Embedding) {
		var ret []float32
		return ret
	}
	return o.Embedding
}

// GetEmbeddingOk returns a tuple with the Embedding field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingResponseData) GetEmbeddingOk() ([]float32, bool) {
	if o == nil || IsNil(o.Embedding) {
		return nil, false
	}
	return o.Embedding, true
}

// HasEmbedding returns a boolean if a field has been set.
func (o *EmbeddingResponseData) HasEmbedding() bool {
	if o != nil && !IsNil(o.Embedding) {
		return true
	}

	return false
}

// SetEmbedding gets a reference to the given []float32 and assigns it to the Embedding field.
func (o *EmbeddingResponseData) SetEmbedding(v []float32) {
	o.Embedding = v
}

// GetIndex returns the Index field value if set, zero value otherwise.
func (o *EmbeddingResponseData) GetIndex() int32 {
	if o == nil || IsNil(o.Index) {
		var ret int32
		return ret
	}
	return *o.Index
}

// GetIndexOk returns a tuple with the Index field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *EmbeddingResponseData) GetIndexOk() (*int32, bool) {
	if o == nil || IsNil(o.Index) {
		return nil, false
	}
	return o.Index, true
}

// HasIndex returns a boolean if a field has been set.
func (o *EmbeddingResponseData) HasIndex() bool {
	if o != nil && !IsNil(o.Index) {
		return true
	}

	return false
}

// SetIndex gets a reference to the given int32 and assigns it to the Index field.
func (o *EmbeddingResponseData) SetIndex(v int32) {
	o.Index = &v
}

func (o EmbeddingResponseData) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o EmbeddingResponseData) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Embedding) {
		toSerialize["embedding"] = o.Embedding
	}
	if !IsNil(o.Index) {
		toSerialize["index"] = o.Index
	}
	return toSerialize, nil
}

type NullableEmbeddingResponseData struct {
	value *EmbeddingResponseData
	isSet bool
}

func (v NullableEmbeddingResponseData) Get() *EmbeddingResponseData {
	return v.value
}

func (v *NullableEmbeddingResponseData) Set(val *EmbeddingResponseData) {
	v.value = val
	v.isSet = true
}

func (v NullableEmbeddingResponseData) IsSet() bool {
	return v.isSet
}

func (v *NullableEmbeddingResponseData) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableEmbeddingResponseData(val *EmbeddingResponseData) *NullableEmbeddingResponseData {
	return &NullableEmbeddingResponseData{value: val, isSet: true}
}

func (v NullableEmbeddingResponseData) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableEmbeddingResponseData) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


