/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)


// InputEntriesInner struct for InputEntriesInner
type InputEntriesInner struct {
	FunctionResultEntry *FunctionResultEntry
	MessageInputEntry *MessageInputEntry
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *InputEntriesInner) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into FunctionResultEntry
	err = json.Unmarshal(data, &dst.FunctionResultEntry);
	if err == nil {
		jsonFunctionResultEntry, _ := json.Marshal(dst.FunctionResultEntry)
		if string(jsonFunctionResultEntry) == "{}" { // empty struct
			dst.FunctionResultEntry = nil
		} else {
			return nil // data stored in dst.FunctionResultEntry, return on the first match
		}
	} else {
		dst.FunctionResultEntry = nil
	}

	// try to unmarshal JSON data into MessageInputEntry
	err = json.Unmarshal(data, &dst.MessageInputEntry);
	if err == nil {
		jsonMessageInputEntry, _ := json.Marshal(dst.MessageInputEntry)
		if string(jsonMessageInputEntry) == "{}" { // empty struct
			dst.MessageInputEntry = nil
		} else {
			return nil // data stored in dst.MessageInputEntry, return on the first match
		}
	} else {
		dst.MessageInputEntry = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(InputEntriesInner)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src InputEntriesInner) MarshalJSON() ([]byte, error) {
	if src.FunctionResultEntry != nil {
		return json.Marshal(&src.FunctionResultEntry)
	}

	if src.MessageInputEntry != nil {
		return json.Marshal(&src.MessageInputEntry)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableInputEntriesInner struct {
	value *InputEntriesInner
	isSet bool
}

func (v NullableInputEntriesInner) Get() *InputEntriesInner {
	return v.value
}

func (v *NullableInputEntriesInner) Set(val *InputEntriesInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInputEntriesInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInputEntriesInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInputEntriesInner(val *InputEntriesInner) *NullableInputEntriesInner {
	return &NullableInputEntriesInner{value: val, isSet: true}
}

func (v NullableInputEntriesInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInputEntriesInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


