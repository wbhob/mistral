/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConversationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversationRequest{}

// ConversationRequest struct for ConversationRequest
type ConversationRequest struct {
	Inputs ConversationInputs `json:"inputs"`
	Stream *bool `json:"stream,omitempty"`
	Store *bool `json:"store,omitempty"`
	HandoffExecution *string `json:"handoff_execution,omitempty"`
	Instructions *string `json:"instructions,omitempty"`
	Tools []AgentToolsInner `json:"tools,omitempty"`
	CompletionArgs *CompletionArgs `json:"completion_args,omitempty"`
	Name *string `json:"name,omitempty"`
	Description *string `json:"description,omitempty"`
	AgentId *string `json:"agent_id,omitempty"`
	Model *string `json:"model,omitempty"`
}

type _ConversationRequest ConversationRequest

// NewConversationRequest instantiates a new ConversationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationRequest(inputs ConversationInputs) *ConversationRequest {
	this := ConversationRequest{}
	this.Inputs = inputs
	var stream bool = false
	this.Stream = &stream
	return &this
}

// NewConversationRequestWithDefaults instantiates a new ConversationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationRequestWithDefaults() *ConversationRequest {
	this := ConversationRequest{}
	var stream bool = false
	this.Stream = &stream
	return &this
}

// GetInputs returns the Inputs field value
func (o *ConversationRequest) GetInputs() ConversationInputs {
	if o == nil {
		var ret ConversationInputs
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetInputsOk() (*ConversationInputs, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inputs, true
}

// SetInputs sets field value
func (o *ConversationRequest) SetInputs(v ConversationInputs) {
	o.Inputs = v
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *ConversationRequest) GetStream() bool {
	if o == nil || IsNil(o.Stream) {
		var ret bool
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *ConversationRequest) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given bool and assigns it to the Stream field.
func (o *ConversationRequest) SetStream(v bool) {
	o.Stream = &v
}

// GetStore returns the Store field value if set, zero value otherwise.
func (o *ConversationRequest) GetStore() bool {
	if o == nil || IsNil(o.Store) {
		var ret bool
		return ret
	}
	return *o.Store
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetStoreOk() (*bool, bool) {
	if o == nil || IsNil(o.Store) {
		return nil, false
	}
	return o.Store, true
}

// HasStore returns a boolean if a field has been set.
func (o *ConversationRequest) HasStore() bool {
	if o != nil && !IsNil(o.Store) {
		return true
	}

	return false
}

// SetStore gets a reference to the given bool and assigns it to the Store field.
func (o *ConversationRequest) SetStore(v bool) {
	o.Store = &v
}

// GetHandoffExecution returns the HandoffExecution field value if set, zero value otherwise.
func (o *ConversationRequest) GetHandoffExecution() string {
	if o == nil || IsNil(o.HandoffExecution) {
		var ret string
		return ret
	}
	return *o.HandoffExecution
}

// GetHandoffExecutionOk returns a tuple with the HandoffExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetHandoffExecutionOk() (*string, bool) {
	if o == nil || IsNil(o.HandoffExecution) {
		return nil, false
	}
	return o.HandoffExecution, true
}

// HasHandoffExecution returns a boolean if a field has been set.
func (o *ConversationRequest) HasHandoffExecution() bool {
	if o != nil && !IsNil(o.HandoffExecution) {
		return true
	}

	return false
}

// SetHandoffExecution gets a reference to the given string and assigns it to the HandoffExecution field.
func (o *ConversationRequest) SetHandoffExecution(v string) {
	o.HandoffExecution = &v
}

// GetInstructions returns the Instructions field value if set, zero value otherwise.
func (o *ConversationRequest) GetInstructions() string {
	if o == nil || IsNil(o.Instructions) {
		var ret string
		return ret
	}
	return *o.Instructions
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetInstructionsOk() (*string, bool) {
	if o == nil || IsNil(o.Instructions) {
		return nil, false
	}
	return o.Instructions, true
}

// HasInstructions returns a boolean if a field has been set.
func (o *ConversationRequest) HasInstructions() bool {
	if o != nil && !IsNil(o.Instructions) {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given string and assigns it to the Instructions field.
func (o *ConversationRequest) SetInstructions(v string) {
	o.Instructions = &v
}

// GetTools returns the Tools field value if set, zero value otherwise.
func (o *ConversationRequest) GetTools() []AgentToolsInner {
	if o == nil || IsNil(o.Tools) {
		var ret []AgentToolsInner
		return ret
	}
	return o.Tools
}

// GetToolsOk returns a tuple with the Tools field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetToolsOk() ([]AgentToolsInner, bool) {
	if o == nil || IsNil(o.Tools) {
		return nil, false
	}
	return o.Tools, true
}

// HasTools returns a boolean if a field has been set.
func (o *ConversationRequest) HasTools() bool {
	if o != nil && !IsNil(o.Tools) {
		return true
	}

	return false
}

// SetTools gets a reference to the given []AgentToolsInner and assigns it to the Tools field.
func (o *ConversationRequest) SetTools(v []AgentToolsInner) {
	o.Tools = v
}

// GetCompletionArgs returns the CompletionArgs field value if set, zero value otherwise.
func (o *ConversationRequest) GetCompletionArgs() CompletionArgs {
	if o == nil || IsNil(o.CompletionArgs) {
		var ret CompletionArgs
		return ret
	}
	return *o.CompletionArgs
}

// GetCompletionArgsOk returns a tuple with the CompletionArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetCompletionArgsOk() (*CompletionArgs, bool) {
	if o == nil || IsNil(o.CompletionArgs) {
		return nil, false
	}
	return o.CompletionArgs, true
}

// HasCompletionArgs returns a boolean if a field has been set.
func (o *ConversationRequest) HasCompletionArgs() bool {
	if o != nil && !IsNil(o.CompletionArgs) {
		return true
	}

	return false
}

// SetCompletionArgs gets a reference to the given CompletionArgs and assigns it to the CompletionArgs field.
func (o *ConversationRequest) SetCompletionArgs(v CompletionArgs) {
	o.CompletionArgs = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ConversationRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ConversationRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ConversationRequest) SetName(v string) {
	o.Name = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ConversationRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ConversationRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ConversationRequest) SetDescription(v string) {
	o.Description = &v
}

// GetAgentId returns the AgentId field value if set, zero value otherwise.
func (o *ConversationRequest) GetAgentId() string {
	if o == nil || IsNil(o.AgentId) {
		var ret string
		return ret
	}
	return *o.AgentId
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetAgentIdOk() (*string, bool) {
	if o == nil || IsNil(o.AgentId) {
		return nil, false
	}
	return o.AgentId, true
}

// HasAgentId returns a boolean if a field has been set.
func (o *ConversationRequest) HasAgentId() bool {
	if o != nil && !IsNil(o.AgentId) {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given string and assigns it to the AgentId field.
func (o *ConversationRequest) SetAgentId(v string) {
	o.AgentId = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ConversationRequest) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConversationRequest) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ConversationRequest) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ConversationRequest) SetModel(v string) {
	o.Model = &v
}

func (o ConversationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inputs"] = o.Inputs
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if !IsNil(o.Store) {
		toSerialize["store"] = o.Store
	}
	if !IsNil(o.HandoffExecution) {
		toSerialize["handoff_execution"] = o.HandoffExecution
	}
	if !IsNil(o.Instructions) {
		toSerialize["instructions"] = o.Instructions
	}
	if !IsNil(o.Tools) {
		toSerialize["tools"] = o.Tools
	}
	if !IsNil(o.CompletionArgs) {
		toSerialize["completion_args"] = o.CompletionArgs
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AgentId) {
		toSerialize["agent_id"] = o.AgentId
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	return toSerialize, nil
}

func (o *ConversationRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"inputs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConversationRequest := _ConversationRequest{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConversationRequest)

	if err != nil {
		return err
	}

	*o = ConversationRequest(varConversationRequest)

	return err
}

type NullableConversationRequest struct {
	value *ConversationRequest
	isSet bool
}

func (v NullableConversationRequest) Get() *ConversationRequest {
	return v.value
}

func (v *NullableConversationRequest) Set(val *ConversationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationRequest(val *ConversationRequest) *NullableConversationRequest {
	return &NullableConversationRequest{value: val, isSet: true}
}

func (v NullableConversationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


