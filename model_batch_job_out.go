/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the BatchJobOut type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchJobOut{}

// BatchJobOut struct for BatchJobOut
type BatchJobOut struct {
	Id string `json:"id"`
	Object *string `json:"object,omitempty"`
	InputFiles []string `json:"input_files"`
	Metadata map[string]interface{} `json:"metadata,omitempty"`
	Endpoint string `json:"endpoint"`
	Model string `json:"model"`
	OutputFile NullableString `json:"output_file,omitempty"`
	ErrorFile NullableString `json:"error_file,omitempty"`
	Errors []BatchError `json:"errors"`
	Status BatchJobStatus `json:"status"`
	CreatedAt int32 `json:"created_at"`
	TotalRequests int32 `json:"total_requests"`
	CompletedRequests int32 `json:"completed_requests"`
	SucceededRequests int32 `json:"succeeded_requests"`
	FailedRequests int32 `json:"failed_requests"`
	StartedAt NullableInt32 `json:"started_at,omitempty"`
	CompletedAt NullableInt32 `json:"completed_at,omitempty"`
}

type _BatchJobOut BatchJobOut

// NewBatchJobOut instantiates a new BatchJobOut object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchJobOut(id string, inputFiles []string, endpoint string, model string, errors []BatchError, status BatchJobStatus, createdAt int32, totalRequests int32, completedRequests int32, succeededRequests int32, failedRequests int32) *BatchJobOut {
	this := BatchJobOut{}
	this.Id = id
	var object string = "batch"
	this.Object = &object
	this.InputFiles = inputFiles
	this.Endpoint = endpoint
	this.Model = model
	this.Errors = errors
	this.Status = status
	this.CreatedAt = createdAt
	this.TotalRequests = totalRequests
	this.CompletedRequests = completedRequests
	this.SucceededRequests = succeededRequests
	this.FailedRequests = failedRequests
	return &this
}

// NewBatchJobOutWithDefaults instantiates a new BatchJobOut object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchJobOutWithDefaults() *BatchJobOut {
	this := BatchJobOut{}
	var object string = "batch"
	this.Object = &object
	return &this
}

// GetId returns the Id field value
func (o *BatchJobOut) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *BatchJobOut) SetId(v string) {
	o.Id = v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *BatchJobOut) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *BatchJobOut) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *BatchJobOut) SetObject(v string) {
	o.Object = &v
}

// GetInputFiles returns the InputFiles field value
func (o *BatchJobOut) GetInputFiles() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.InputFiles
}

// GetInputFilesOk returns a tuple with the InputFiles field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetInputFilesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.InputFiles, true
}

// SetInputFiles sets field value
func (o *BatchJobOut) SetInputFiles(v []string) {
	o.InputFiles = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BatchJobOut) GetMetadata() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BatchJobOut) GetMetadataOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Metadata) {
		return map[string]interface{}{}, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *BatchJobOut) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]interface{} and assigns it to the Metadata field.
func (o *BatchJobOut) SetMetadata(v map[string]interface{}) {
	o.Metadata = v
}

// GetEndpoint returns the Endpoint field value
func (o *BatchJobOut) GetEndpoint() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Endpoint
}

// GetEndpointOk returns a tuple with the Endpoint field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetEndpointOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Endpoint, true
}

// SetEndpoint sets field value
func (o *BatchJobOut) SetEndpoint(v string) {
	o.Endpoint = v
}

// GetModel returns the Model field value
func (o *BatchJobOut) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *BatchJobOut) SetModel(v string) {
	o.Model = v
}

// GetOutputFile returns the OutputFile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BatchJobOut) GetOutputFile() string {
	if o == nil || IsNil(o.OutputFile.Get()) {
		var ret string
		return ret
	}
	return *o.OutputFile.Get()
}

// GetOutputFileOk returns a tuple with the OutputFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BatchJobOut) GetOutputFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.OutputFile.Get(), o.OutputFile.IsSet()
}

// HasOutputFile returns a boolean if a field has been set.
func (o *BatchJobOut) HasOutputFile() bool {
	if o != nil && o.OutputFile.IsSet() {
		return true
	}

	return false
}

// SetOutputFile gets a reference to the given NullableString and assigns it to the OutputFile field.
func (o *BatchJobOut) SetOutputFile(v string) {
	o.OutputFile.Set(&v)
}
// SetOutputFileNil sets the value for OutputFile to be an explicit nil
func (o *BatchJobOut) SetOutputFileNil() {
	o.OutputFile.Set(nil)
}

// UnsetOutputFile ensures that no value is present for OutputFile, not even an explicit nil
func (o *BatchJobOut) UnsetOutputFile() {
	o.OutputFile.Unset()
}

// GetErrorFile returns the ErrorFile field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BatchJobOut) GetErrorFile() string {
	if o == nil || IsNil(o.ErrorFile.Get()) {
		var ret string
		return ret
	}
	return *o.ErrorFile.Get()
}

// GetErrorFileOk returns a tuple with the ErrorFile field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BatchJobOut) GetErrorFileOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.ErrorFile.Get(), o.ErrorFile.IsSet()
}

// HasErrorFile returns a boolean if a field has been set.
func (o *BatchJobOut) HasErrorFile() bool {
	if o != nil && o.ErrorFile.IsSet() {
		return true
	}

	return false
}

// SetErrorFile gets a reference to the given NullableString and assigns it to the ErrorFile field.
func (o *BatchJobOut) SetErrorFile(v string) {
	o.ErrorFile.Set(&v)
}
// SetErrorFileNil sets the value for ErrorFile to be an explicit nil
func (o *BatchJobOut) SetErrorFileNil() {
	o.ErrorFile.Set(nil)
}

// UnsetErrorFile ensures that no value is present for ErrorFile, not even an explicit nil
func (o *BatchJobOut) UnsetErrorFile() {
	o.ErrorFile.Unset()
}

// GetErrors returns the Errors field value
func (o *BatchJobOut) GetErrors() []BatchError {
	if o == nil {
		var ret []BatchError
		return ret
	}

	return o.Errors
}

// GetErrorsOk returns a tuple with the Errors field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetErrorsOk() ([]BatchError, bool) {
	if o == nil {
		return nil, false
	}
	return o.Errors, true
}

// SetErrors sets field value
func (o *BatchJobOut) SetErrors(v []BatchError) {
	o.Errors = v
}

// GetStatus returns the Status field value
func (o *BatchJobOut) GetStatus() BatchJobStatus {
	if o == nil {
		var ret BatchJobStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetStatusOk() (*BatchJobStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *BatchJobOut) SetStatus(v BatchJobStatus) {
	o.Status = v
}

// GetCreatedAt returns the CreatedAt field value
func (o *BatchJobOut) GetCreatedAt() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetCreatedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatedAt, true
}

// SetCreatedAt sets field value
func (o *BatchJobOut) SetCreatedAt(v int32) {
	o.CreatedAt = v
}

// GetTotalRequests returns the TotalRequests field value
func (o *BatchJobOut) GetTotalRequests() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.TotalRequests
}

// GetTotalRequestsOk returns a tuple with the TotalRequests field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetTotalRequestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TotalRequests, true
}

// SetTotalRequests sets field value
func (o *BatchJobOut) SetTotalRequests(v int32) {
	o.TotalRequests = v
}

// GetCompletedRequests returns the CompletedRequests field value
func (o *BatchJobOut) GetCompletedRequests() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.CompletedRequests
}

// GetCompletedRequestsOk returns a tuple with the CompletedRequests field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetCompletedRequestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CompletedRequests, true
}

// SetCompletedRequests sets field value
func (o *BatchJobOut) SetCompletedRequests(v int32) {
	o.CompletedRequests = v
}

// GetSucceededRequests returns the SucceededRequests field value
func (o *BatchJobOut) GetSucceededRequests() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.SucceededRequests
}

// GetSucceededRequestsOk returns a tuple with the SucceededRequests field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetSucceededRequestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SucceededRequests, true
}

// SetSucceededRequests sets field value
func (o *BatchJobOut) SetSucceededRequests(v int32) {
	o.SucceededRequests = v
}

// GetFailedRequests returns the FailedRequests field value
func (o *BatchJobOut) GetFailedRequests() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.FailedRequests
}

// GetFailedRequestsOk returns a tuple with the FailedRequests field value
// and a boolean to check if the value has been set.
func (o *BatchJobOut) GetFailedRequestsOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailedRequests, true
}

// SetFailedRequests sets field value
func (o *BatchJobOut) SetFailedRequests(v int32) {
	o.FailedRequests = v
}

// GetStartedAt returns the StartedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BatchJobOut) GetStartedAt() int32 {
	if o == nil || IsNil(o.StartedAt.Get()) {
		var ret int32
		return ret
	}
	return *o.StartedAt.Get()
}

// GetStartedAtOk returns a tuple with the StartedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BatchJobOut) GetStartedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.StartedAt.Get(), o.StartedAt.IsSet()
}

// HasStartedAt returns a boolean if a field has been set.
func (o *BatchJobOut) HasStartedAt() bool {
	if o != nil && o.StartedAt.IsSet() {
		return true
	}

	return false
}

// SetStartedAt gets a reference to the given NullableInt32 and assigns it to the StartedAt field.
func (o *BatchJobOut) SetStartedAt(v int32) {
	o.StartedAt.Set(&v)
}
// SetStartedAtNil sets the value for StartedAt to be an explicit nil
func (o *BatchJobOut) SetStartedAtNil() {
	o.StartedAt.Set(nil)
}

// UnsetStartedAt ensures that no value is present for StartedAt, not even an explicit nil
func (o *BatchJobOut) UnsetStartedAt() {
	o.StartedAt.Unset()
}

// GetCompletedAt returns the CompletedAt field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *BatchJobOut) GetCompletedAt() int32 {
	if o == nil || IsNil(o.CompletedAt.Get()) {
		var ret int32
		return ret
	}
	return *o.CompletedAt.Get()
}

// GetCompletedAtOk returns a tuple with the CompletedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *BatchJobOut) GetCompletedAtOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletedAt.Get(), o.CompletedAt.IsSet()
}

// HasCompletedAt returns a boolean if a field has been set.
func (o *BatchJobOut) HasCompletedAt() bool {
	if o != nil && o.CompletedAt.IsSet() {
		return true
	}

	return false
}

// SetCompletedAt gets a reference to the given NullableInt32 and assigns it to the CompletedAt field.
func (o *BatchJobOut) SetCompletedAt(v int32) {
	o.CompletedAt.Set(&v)
}
// SetCompletedAtNil sets the value for CompletedAt to be an explicit nil
func (o *BatchJobOut) SetCompletedAtNil() {
	o.CompletedAt.Set(nil)
}

// UnsetCompletedAt ensures that no value is present for CompletedAt, not even an explicit nil
func (o *BatchJobOut) UnsetCompletedAt() {
	o.CompletedAt.Unset()
}

func (o BatchJobOut) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchJobOut) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	toSerialize["input_files"] = o.InputFiles
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	toSerialize["endpoint"] = o.Endpoint
	toSerialize["model"] = o.Model
	if o.OutputFile.IsSet() {
		toSerialize["output_file"] = o.OutputFile.Get()
	}
	if o.ErrorFile.IsSet() {
		toSerialize["error_file"] = o.ErrorFile.Get()
	}
	toSerialize["errors"] = o.Errors
	toSerialize["status"] = o.Status
	toSerialize["created_at"] = o.CreatedAt
	toSerialize["total_requests"] = o.TotalRequests
	toSerialize["completed_requests"] = o.CompletedRequests
	toSerialize["succeeded_requests"] = o.SucceededRequests
	toSerialize["failed_requests"] = o.FailedRequests
	if o.StartedAt.IsSet() {
		toSerialize["started_at"] = o.StartedAt.Get()
	}
	if o.CompletedAt.IsSet() {
		toSerialize["completed_at"] = o.CompletedAt.Get()
	}
	return toSerialize, nil
}

func (o *BatchJobOut) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"input_files",
		"endpoint",
		"model",
		"errors",
		"status",
		"created_at",
		"total_requests",
		"completed_requests",
		"succeeded_requests",
		"failed_requests",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varBatchJobOut := _BatchJobOut{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varBatchJobOut)

	if err != nil {
		return err
	}

	*o = BatchJobOut(varBatchJobOut)

	return err
}

type NullableBatchJobOut struct {
	value *BatchJobOut
	isSet bool
}

func (v NullableBatchJobOut) Get() *BatchJobOut {
	return v.value
}

func (v *NullableBatchJobOut) Set(val *BatchJobOut) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchJobOut) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchJobOut) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchJobOut(val *BatchJobOut) *NullableBatchJobOut {
	return &NullableBatchJobOut{value: val, isSet: true}
}

func (v NullableBatchJobOut) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchJobOut) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


