/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the ConversationRequestBase type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConversationRequestBase{}

// ConversationRequestBase struct for ConversationRequestBase
type ConversationRequestBase struct {
	Inputs ConversationInputs `json:"inputs"`
	Stream NullableBool `json:"stream,omitempty"`
	Store NullableBool `json:"store,omitempty"`
	HandoffExecution NullableString `json:"handoff_execution,omitempty"`
	Instructions NullableString `json:"instructions,omitempty"`
	Tools []AgentToolsInner `json:"tools,omitempty"`
	CompletionArgs NullableCompletionArgs `json:"completion_args,omitempty"`
	Name NullableString `json:"name,omitempty"`
	Description NullableString `json:"description,omitempty"`
	AgentId NullableString `json:"agent_id,omitempty"`
	Model NullableString `json:"model,omitempty"`
}

type _ConversationRequestBase ConversationRequestBase

// NewConversationRequestBase instantiates a new ConversationRequestBase object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConversationRequestBase(inputs ConversationInputs) *ConversationRequestBase {
	this := ConversationRequestBase{}
	this.Inputs = inputs
	return &this
}

// NewConversationRequestBaseWithDefaults instantiates a new ConversationRequestBase object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConversationRequestBaseWithDefaults() *ConversationRequestBase {
	this := ConversationRequestBase{}
	return &this
}

// GetInputs returns the Inputs field value
func (o *ConversationRequestBase) GetInputs() ConversationInputs {
	if o == nil {
		var ret ConversationInputs
		return ret
	}

	return o.Inputs
}

// GetInputsOk returns a tuple with the Inputs field value
// and a boolean to check if the value has been set.
func (o *ConversationRequestBase) GetInputsOk() (*ConversationInputs, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Inputs, true
}

// SetInputs sets field value
func (o *ConversationRequestBase) SetInputs(v ConversationInputs) {
	o.Inputs = v
}

// GetStream returns the Stream field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetStream() bool {
	if o == nil || IsNil(o.Stream.Get()) {
		var ret bool
		return ret
	}
	return *o.Stream.Get()
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetStreamOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Stream.Get(), o.Stream.IsSet()
}

// HasStream returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasStream() bool {
	if o != nil && o.Stream.IsSet() {
		return true
	}

	return false
}

// SetStream gets a reference to the given NullableBool and assigns it to the Stream field.
func (o *ConversationRequestBase) SetStream(v bool) {
	o.Stream.Set(&v)
}
// SetStreamNil sets the value for Stream to be an explicit nil
func (o *ConversationRequestBase) SetStreamNil() {
	o.Stream.Set(nil)
}

// UnsetStream ensures that no value is present for Stream, not even an explicit nil
func (o *ConversationRequestBase) UnsetStream() {
	o.Stream.Unset()
}

// GetStore returns the Store field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetStore() bool {
	if o == nil || IsNil(o.Store.Get()) {
		var ret bool
		return ret
	}
	return *o.Store.Get()
}

// GetStoreOk returns a tuple with the Store field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetStoreOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return o.Store.Get(), o.Store.IsSet()
}

// HasStore returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasStore() bool {
	if o != nil && o.Store.IsSet() {
		return true
	}

	return false
}

// SetStore gets a reference to the given NullableBool and assigns it to the Store field.
func (o *ConversationRequestBase) SetStore(v bool) {
	o.Store.Set(&v)
}
// SetStoreNil sets the value for Store to be an explicit nil
func (o *ConversationRequestBase) SetStoreNil() {
	o.Store.Set(nil)
}

// UnsetStore ensures that no value is present for Store, not even an explicit nil
func (o *ConversationRequestBase) UnsetStore() {
	o.Store.Unset()
}

// GetHandoffExecution returns the HandoffExecution field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetHandoffExecution() string {
	if o == nil || IsNil(o.HandoffExecution.Get()) {
		var ret string
		return ret
	}
	return *o.HandoffExecution.Get()
}

// GetHandoffExecutionOk returns a tuple with the HandoffExecution field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetHandoffExecutionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.HandoffExecution.Get(), o.HandoffExecution.IsSet()
}

// HasHandoffExecution returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasHandoffExecution() bool {
	if o != nil && o.HandoffExecution.IsSet() {
		return true
	}

	return false
}

// SetHandoffExecution gets a reference to the given NullableString and assigns it to the HandoffExecution field.
func (o *ConversationRequestBase) SetHandoffExecution(v string) {
	o.HandoffExecution.Set(&v)
}
// SetHandoffExecutionNil sets the value for HandoffExecution to be an explicit nil
func (o *ConversationRequestBase) SetHandoffExecutionNil() {
	o.HandoffExecution.Set(nil)
}

// UnsetHandoffExecution ensures that no value is present for HandoffExecution, not even an explicit nil
func (o *ConversationRequestBase) UnsetHandoffExecution() {
	o.HandoffExecution.Unset()
}

// GetInstructions returns the Instructions field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetInstructions() string {
	if o == nil || IsNil(o.Instructions.Get()) {
		var ret string
		return ret
	}
	return *o.Instructions.Get()
}

// GetInstructionsOk returns a tuple with the Instructions field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetInstructionsOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Instructions.Get(), o.Instructions.IsSet()
}

// HasInstructions returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasInstructions() bool {
	if o != nil && o.Instructions.IsSet() {
		return true
	}

	return false
}

// SetInstructions gets a reference to the given NullableString and assigns it to the Instructions field.
func (o *ConversationRequestBase) SetInstructions(v string) {
	o.Instructions.Set(&v)
}
// SetInstructionsNil sets the value for Instructions to be an explicit nil
func (o *ConversationRequestBase) SetInstructionsNil() {
	o.Instructions.Set(nil)
}

// UnsetInstructions ensures that no value is present for Instructions, not even an explicit nil
func (o *ConversationRequestBase) UnsetInstructions() {
	o.Instructions.Unset()
}

// GetTools returns the Tools field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetTools() []AgentToolsInner {
	if o == nil {
		var ret []AgentToolsInner
		return ret
	}
	return o.Tools
}

// GetToolsOk returns a tuple with the Tools field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetToolsOk() ([]AgentToolsInner, bool) {
	if o == nil || IsNil(o.Tools) {
		return nil, false
	}
	return o.Tools, true
}

// HasTools returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasTools() bool {
	if o != nil && !IsNil(o.Tools) {
		return true
	}

	return false
}

// SetTools gets a reference to the given []AgentToolsInner and assigns it to the Tools field.
func (o *ConversationRequestBase) SetTools(v []AgentToolsInner) {
	o.Tools = v
}

// GetCompletionArgs returns the CompletionArgs field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetCompletionArgs() CompletionArgs {
	if o == nil || IsNil(o.CompletionArgs.Get()) {
		var ret CompletionArgs
		return ret
	}
	return *o.CompletionArgs.Get()
}

// GetCompletionArgsOk returns a tuple with the CompletionArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetCompletionArgsOk() (*CompletionArgs, bool) {
	if o == nil {
		return nil, false
	}
	return o.CompletionArgs.Get(), o.CompletionArgs.IsSet()
}

// HasCompletionArgs returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasCompletionArgs() bool {
	if o != nil && o.CompletionArgs.IsSet() {
		return true
	}

	return false
}

// SetCompletionArgs gets a reference to the given NullableCompletionArgs and assigns it to the CompletionArgs field.
func (o *ConversationRequestBase) SetCompletionArgs(v CompletionArgs) {
	o.CompletionArgs.Set(&v)
}
// SetCompletionArgsNil sets the value for CompletionArgs to be an explicit nil
func (o *ConversationRequestBase) SetCompletionArgsNil() {
	o.CompletionArgs.Set(nil)
}

// UnsetCompletionArgs ensures that no value is present for CompletionArgs, not even an explicit nil
func (o *ConversationRequestBase) UnsetCompletionArgs() {
	o.CompletionArgs.Unset()
}

// GetName returns the Name field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetName() string {
	if o == nil || IsNil(o.Name.Get()) {
		var ret string
		return ret
	}
	return *o.Name.Get()
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Name.Get(), o.Name.IsSet()
}

// HasName returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasName() bool {
	if o != nil && o.Name.IsSet() {
		return true
	}

	return false
}

// SetName gets a reference to the given NullableString and assigns it to the Name field.
func (o *ConversationRequestBase) SetName(v string) {
	o.Name.Set(&v)
}
// SetNameNil sets the value for Name to be an explicit nil
func (o *ConversationRequestBase) SetNameNil() {
	o.Name.Set(nil)
}

// UnsetName ensures that no value is present for Name, not even an explicit nil
func (o *ConversationRequestBase) UnsetName() {
	o.Name.Unset()
}

// GetDescription returns the Description field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetDescription() string {
	if o == nil || IsNil(o.Description.Get()) {
		var ret string
		return ret
	}
	return *o.Description.Get()
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Description.Get(), o.Description.IsSet()
}

// HasDescription returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasDescription() bool {
	if o != nil && o.Description.IsSet() {
		return true
	}

	return false
}

// SetDescription gets a reference to the given NullableString and assigns it to the Description field.
func (o *ConversationRequestBase) SetDescription(v string) {
	o.Description.Set(&v)
}
// SetDescriptionNil sets the value for Description to be an explicit nil
func (o *ConversationRequestBase) SetDescriptionNil() {
	o.Description.Set(nil)
}

// UnsetDescription ensures that no value is present for Description, not even an explicit nil
func (o *ConversationRequestBase) UnsetDescription() {
	o.Description.Unset()
}

// GetAgentId returns the AgentId field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetAgentId() string {
	if o == nil || IsNil(o.AgentId.Get()) {
		var ret string
		return ret
	}
	return *o.AgentId.Get()
}

// GetAgentIdOk returns a tuple with the AgentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetAgentIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.AgentId.Get(), o.AgentId.IsSet()
}

// HasAgentId returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasAgentId() bool {
	if o != nil && o.AgentId.IsSet() {
		return true
	}

	return false
}

// SetAgentId gets a reference to the given NullableString and assigns it to the AgentId field.
func (o *ConversationRequestBase) SetAgentId(v string) {
	o.AgentId.Set(&v)
}
// SetAgentIdNil sets the value for AgentId to be an explicit nil
func (o *ConversationRequestBase) SetAgentIdNil() {
	o.AgentId.Set(nil)
}

// UnsetAgentId ensures that no value is present for AgentId, not even an explicit nil
func (o *ConversationRequestBase) UnsetAgentId() {
	o.AgentId.Unset()
}

// GetModel returns the Model field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *ConversationRequestBase) GetModel() string {
	if o == nil || IsNil(o.Model.Get()) {
		var ret string
		return ret
	}
	return *o.Model.Get()
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *ConversationRequestBase) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Model.Get(), o.Model.IsSet()
}

// HasModel returns a boolean if a field has been set.
func (o *ConversationRequestBase) HasModel() bool {
	if o != nil && o.Model.IsSet() {
		return true
	}

	return false
}

// SetModel gets a reference to the given NullableString and assigns it to the Model field.
func (o *ConversationRequestBase) SetModel(v string) {
	o.Model.Set(&v)
}
// SetModelNil sets the value for Model to be an explicit nil
func (o *ConversationRequestBase) SetModelNil() {
	o.Model.Set(nil)
}

// UnsetModel ensures that no value is present for Model, not even an explicit nil
func (o *ConversationRequestBase) UnsetModel() {
	o.Model.Unset()
}

func (o ConversationRequestBase) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConversationRequestBase) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["inputs"] = o.Inputs
	if o.Stream.IsSet() {
		toSerialize["stream"] = o.Stream.Get()
	}
	if o.Store.IsSet() {
		toSerialize["store"] = o.Store.Get()
	}
	if o.HandoffExecution.IsSet() {
		toSerialize["handoff_execution"] = o.HandoffExecution.Get()
	}
	if o.Instructions.IsSet() {
		toSerialize["instructions"] = o.Instructions.Get()
	}
	if o.Tools != nil {
		toSerialize["tools"] = o.Tools
	}
	if o.CompletionArgs.IsSet() {
		toSerialize["completion_args"] = o.CompletionArgs.Get()
	}
	if o.Name.IsSet() {
		toSerialize["name"] = o.Name.Get()
	}
	if o.Description.IsSet() {
		toSerialize["description"] = o.Description.Get()
	}
	if o.AgentId.IsSet() {
		toSerialize["agent_id"] = o.AgentId.Get()
	}
	if o.Model.IsSet() {
		toSerialize["model"] = o.Model.Get()
	}
	return toSerialize, nil
}

func (o *ConversationRequestBase) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"inputs",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varConversationRequestBase := _ConversationRequestBase{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varConversationRequestBase)

	if err != nil {
		return err
	}

	*o = ConversationRequestBase(varConversationRequestBase)

	return err
}

type NullableConversationRequestBase struct {
	value *ConversationRequestBase
	isSet bool
}

func (v NullableConversationRequestBase) Get() *ConversationRequestBase {
	return v.value
}

func (v *NullableConversationRequestBase) Set(val *ConversationRequestBase) {
	v.value = val
	v.isSet = true
}

func (v NullableConversationRequestBase) IsSet() bool {
	return v.isSet
}

func (v *NullableConversationRequestBase) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConversationRequestBase(val *ConversationRequestBase) *NullableConversationRequestBase {
	return &NullableConversationRequestBase{value: val, isSet: true}
}

func (v NullableConversationRequestBase) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConversationRequestBase) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


