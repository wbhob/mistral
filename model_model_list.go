/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
)

// checks if the ModelList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModelList{}

// ModelList struct for ModelList
type ModelList struct {
	Object *string `json:"object,omitempty"`
	Data []ModelListDataInner `json:"data,omitempty"`
}

// NewModelList instantiates a new ModelList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModelList() *ModelList {
	this := ModelList{}
	var object string = "list"
	this.Object = &object
	return &this
}

// NewModelListWithDefaults instantiates a new ModelList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModelListWithDefaults() *ModelList {
	this := ModelList{}
	var object string = "list"
	this.Object = &object
	return &this
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ModelList) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelList) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ModelList) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ModelList) SetObject(v string) {
	o.Object = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ModelList) GetData() []ModelListDataInner {
	if o == nil || IsNil(o.Data) {
		var ret []ModelListDataInner
		return ret
	}
	return o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModelList) GetDataOk() ([]ModelListDataInner, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ModelList) HasData() bool {
	if o != nil && !IsNil(o.Data) {
		return true
	}

	return false
}

// SetData gets a reference to the given []ModelListDataInner and assigns it to the Data field.
func (o *ModelList) SetData(v []ModelListDataInner) {
	o.Data = v
}

func (o ModelList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModelList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Data) {
		toSerialize["data"] = o.Data
	}
	return toSerialize, nil
}

type NullableModelList struct {
	value *ModelList
	isSet bool
}

func (v NullableModelList) Get() *ModelList {
	return v.value
}

func (v *NullableModelList) Set(val *ModelList) {
	v.value = val
	v.isSet = true
}

func (v NullableModelList) IsSet() bool {
	return v.isSet
}

func (v *NullableModelList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModelList(val *ModelList) *NullableModelList {
	return &NullableModelList{value: val, isSet: true}
}

func (v NullableModelList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModelList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


