/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)

// checks if the FIMCompletionRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FIMCompletionRequest{}

// FIMCompletionRequest struct for FIMCompletionRequest
type FIMCompletionRequest struct {
	// ID of the model to use. Only compatible for now with:   - `codestral-2405`   - `codestral-latest`
	Model string `json:"model"`
	Temperature NullableFloat32 `json:"temperature,omitempty"`
	// Nucleus sampling, where the model considers the results of the tokens with `top_p` probability mass. So 0.1 means only the tokens comprising the top 10% probability mass are considered. We generally recommend altering this or `temperature` but not both.
	TopP *float32 `json:"top_p,omitempty"`
	MaxTokens NullableInt32 `json:"max_tokens,omitempty"`
	// Whether to stream back partial progress. If set, tokens will be sent as data-only server-side events as they become available, with the stream terminated by a data: [DONE] message. Otherwise, the server will hold the request open until the timeout or until completion, with the response containing the full result as JSON.
	Stream *bool `json:"stream,omitempty"`
	Stop *Stop1 `json:"stop,omitempty"`
	RandomSeed NullableInt32 `json:"random_seed,omitempty"`
	// The text/code to complete.
	Prompt string `json:"prompt"`
	Suffix NullableString `json:"suffix,omitempty"`
	MinTokens NullableInt32 `json:"min_tokens,omitempty"`
	AdditionalProperties map[string]interface{}
}

type _FIMCompletionRequest FIMCompletionRequest

// NewFIMCompletionRequest instantiates a new FIMCompletionRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFIMCompletionRequest(model string, prompt string) *FIMCompletionRequest {
	this := FIMCompletionRequest{}
	this.Model = model
	var topP float32 = 1.0
	this.TopP = &topP
	var stream bool = false
	this.Stream = &stream
	this.Prompt = prompt
	return &this
}

// NewFIMCompletionRequestWithDefaults instantiates a new FIMCompletionRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFIMCompletionRequestWithDefaults() *FIMCompletionRequest {
	this := FIMCompletionRequest{}
	var model string = "codestral-2405"
	this.Model = model
	var topP float32 = 1.0
	this.TopP = &topP
	var stream bool = false
	this.Stream = &stream
	return &this
}

// GetModel returns the Model field value
func (o *FIMCompletionRequest) GetModel() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Model
}

// GetModelOk returns a tuple with the Model field value
// and a boolean to check if the value has been set.
func (o *FIMCompletionRequest) GetModelOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Model, true
}

// SetModel sets field value
func (o *FIMCompletionRequest) SetModel(v string) {
	o.Model = v
}

// GetTemperature returns the Temperature field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FIMCompletionRequest) GetTemperature() float32 {
	if o == nil || IsNil(o.Temperature.Get()) {
		var ret float32
		return ret
	}
	return *o.Temperature.Get()
}

// GetTemperatureOk returns a tuple with the Temperature field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FIMCompletionRequest) GetTemperatureOk() (*float32, bool) {
	if o == nil {
		return nil, false
	}
	return o.Temperature.Get(), o.Temperature.IsSet()
}

// HasTemperature returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasTemperature() bool {
	if o != nil && o.Temperature.IsSet() {
		return true
	}

	return false
}

// SetTemperature gets a reference to the given NullableFloat32 and assigns it to the Temperature field.
func (o *FIMCompletionRequest) SetTemperature(v float32) {
	o.Temperature.Set(&v)
}
// SetTemperatureNil sets the value for Temperature to be an explicit nil
func (o *FIMCompletionRequest) SetTemperatureNil() {
	o.Temperature.Set(nil)
}

// UnsetTemperature ensures that no value is present for Temperature, not even an explicit nil
func (o *FIMCompletionRequest) UnsetTemperature() {
	o.Temperature.Unset()
}

// GetTopP returns the TopP field value if set, zero value otherwise.
func (o *FIMCompletionRequest) GetTopP() float32 {
	if o == nil || IsNil(o.TopP) {
		var ret float32
		return ret
	}
	return *o.TopP
}

// GetTopPOk returns a tuple with the TopP field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FIMCompletionRequest) GetTopPOk() (*float32, bool) {
	if o == nil || IsNil(o.TopP) {
		return nil, false
	}
	return o.TopP, true
}

// HasTopP returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasTopP() bool {
	if o != nil && !IsNil(o.TopP) {
		return true
	}

	return false
}

// SetTopP gets a reference to the given float32 and assigns it to the TopP field.
func (o *FIMCompletionRequest) SetTopP(v float32) {
	o.TopP = &v
}

// GetMaxTokens returns the MaxTokens field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FIMCompletionRequest) GetMaxTokens() int32 {
	if o == nil || IsNil(o.MaxTokens.Get()) {
		var ret int32
		return ret
	}
	return *o.MaxTokens.Get()
}

// GetMaxTokensOk returns a tuple with the MaxTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FIMCompletionRequest) GetMaxTokensOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MaxTokens.Get(), o.MaxTokens.IsSet()
}

// HasMaxTokens returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasMaxTokens() bool {
	if o != nil && o.MaxTokens.IsSet() {
		return true
	}

	return false
}

// SetMaxTokens gets a reference to the given NullableInt32 and assigns it to the MaxTokens field.
func (o *FIMCompletionRequest) SetMaxTokens(v int32) {
	o.MaxTokens.Set(&v)
}
// SetMaxTokensNil sets the value for MaxTokens to be an explicit nil
func (o *FIMCompletionRequest) SetMaxTokensNil() {
	o.MaxTokens.Set(nil)
}

// UnsetMaxTokens ensures that no value is present for MaxTokens, not even an explicit nil
func (o *FIMCompletionRequest) UnsetMaxTokens() {
	o.MaxTokens.Unset()
}

// GetStream returns the Stream field value if set, zero value otherwise.
func (o *FIMCompletionRequest) GetStream() bool {
	if o == nil || IsNil(o.Stream) {
		var ret bool
		return ret
	}
	return *o.Stream
}

// GetStreamOk returns a tuple with the Stream field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FIMCompletionRequest) GetStreamOk() (*bool, bool) {
	if o == nil || IsNil(o.Stream) {
		return nil, false
	}
	return o.Stream, true
}

// HasStream returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasStream() bool {
	if o != nil && !IsNil(o.Stream) {
		return true
	}

	return false
}

// SetStream gets a reference to the given bool and assigns it to the Stream field.
func (o *FIMCompletionRequest) SetStream(v bool) {
	o.Stream = &v
}

// GetStop returns the Stop field value if set, zero value otherwise.
func (o *FIMCompletionRequest) GetStop() Stop1 {
	if o == nil || IsNil(o.Stop) {
		var ret Stop1
		return ret
	}
	return *o.Stop
}

// GetStopOk returns a tuple with the Stop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FIMCompletionRequest) GetStopOk() (*Stop1, bool) {
	if o == nil || IsNil(o.Stop) {
		return nil, false
	}
	return o.Stop, true
}

// HasStop returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasStop() bool {
	if o != nil && !IsNil(o.Stop) {
		return true
	}

	return false
}

// SetStop gets a reference to the given Stop1 and assigns it to the Stop field.
func (o *FIMCompletionRequest) SetStop(v Stop1) {
	o.Stop = &v
}

// GetRandomSeed returns the RandomSeed field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FIMCompletionRequest) GetRandomSeed() int32 {
	if o == nil || IsNil(o.RandomSeed.Get()) {
		var ret int32
		return ret
	}
	return *o.RandomSeed.Get()
}

// GetRandomSeedOk returns a tuple with the RandomSeed field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FIMCompletionRequest) GetRandomSeedOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.RandomSeed.Get(), o.RandomSeed.IsSet()
}

// HasRandomSeed returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasRandomSeed() bool {
	if o != nil && o.RandomSeed.IsSet() {
		return true
	}

	return false
}

// SetRandomSeed gets a reference to the given NullableInt32 and assigns it to the RandomSeed field.
func (o *FIMCompletionRequest) SetRandomSeed(v int32) {
	o.RandomSeed.Set(&v)
}
// SetRandomSeedNil sets the value for RandomSeed to be an explicit nil
func (o *FIMCompletionRequest) SetRandomSeedNil() {
	o.RandomSeed.Set(nil)
}

// UnsetRandomSeed ensures that no value is present for RandomSeed, not even an explicit nil
func (o *FIMCompletionRequest) UnsetRandomSeed() {
	o.RandomSeed.Unset()
}

// GetPrompt returns the Prompt field value
func (o *FIMCompletionRequest) GetPrompt() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Prompt
}

// GetPromptOk returns a tuple with the Prompt field value
// and a boolean to check if the value has been set.
func (o *FIMCompletionRequest) GetPromptOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Prompt, true
}

// SetPrompt sets field value
func (o *FIMCompletionRequest) SetPrompt(v string) {
	o.Prompt = v
}

// GetSuffix returns the Suffix field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FIMCompletionRequest) GetSuffix() string {
	if o == nil || IsNil(o.Suffix.Get()) {
		var ret string
		return ret
	}
	return *o.Suffix.Get()
}

// GetSuffixOk returns a tuple with the Suffix field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FIMCompletionRequest) GetSuffixOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Suffix.Get(), o.Suffix.IsSet()
}

// HasSuffix returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasSuffix() bool {
	if o != nil && o.Suffix.IsSet() {
		return true
	}

	return false
}

// SetSuffix gets a reference to the given NullableString and assigns it to the Suffix field.
func (o *FIMCompletionRequest) SetSuffix(v string) {
	o.Suffix.Set(&v)
}
// SetSuffixNil sets the value for Suffix to be an explicit nil
func (o *FIMCompletionRequest) SetSuffixNil() {
	o.Suffix.Set(nil)
}

// UnsetSuffix ensures that no value is present for Suffix, not even an explicit nil
func (o *FIMCompletionRequest) UnsetSuffix() {
	o.Suffix.Unset()
}

// GetMinTokens returns the MinTokens field value if set, zero value otherwise (both if not set or set to explicit null).
func (o *FIMCompletionRequest) GetMinTokens() int32 {
	if o == nil || IsNil(o.MinTokens.Get()) {
		var ret int32
		return ret
	}
	return *o.MinTokens.Get()
}

// GetMinTokensOk returns a tuple with the MinTokens field value if set, nil otherwise
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *FIMCompletionRequest) GetMinTokensOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return o.MinTokens.Get(), o.MinTokens.IsSet()
}

// HasMinTokens returns a boolean if a field has been set.
func (o *FIMCompletionRequest) HasMinTokens() bool {
	if o != nil && o.MinTokens.IsSet() {
		return true
	}

	return false
}

// SetMinTokens gets a reference to the given NullableInt32 and assigns it to the MinTokens field.
func (o *FIMCompletionRequest) SetMinTokens(v int32) {
	o.MinTokens.Set(&v)
}
// SetMinTokensNil sets the value for MinTokens to be an explicit nil
func (o *FIMCompletionRequest) SetMinTokensNil() {
	o.MinTokens.Set(nil)
}

// UnsetMinTokens ensures that no value is present for MinTokens, not even an explicit nil
func (o *FIMCompletionRequest) UnsetMinTokens() {
	o.MinTokens.Unset()
}

func (o FIMCompletionRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FIMCompletionRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["model"] = o.Model
	if o.Temperature.IsSet() {
		toSerialize["temperature"] = o.Temperature.Get()
	}
	if !IsNil(o.TopP) {
		toSerialize["top_p"] = o.TopP
	}
	if o.MaxTokens.IsSet() {
		toSerialize["max_tokens"] = o.MaxTokens.Get()
	}
	if !IsNil(o.Stream) {
		toSerialize["stream"] = o.Stream
	}
	if !IsNil(o.Stop) {
		toSerialize["stop"] = o.Stop
	}
	if o.RandomSeed.IsSet() {
		toSerialize["random_seed"] = o.RandomSeed.Get()
	}
	toSerialize["prompt"] = o.Prompt
	if o.Suffix.IsSet() {
		toSerialize["suffix"] = o.Suffix.Get()
	}
	if o.MinTokens.IsSet() {
		toSerialize["min_tokens"] = o.MinTokens.Get()
	}

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *FIMCompletionRequest) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"model",
		"prompt",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFIMCompletionRequest := _FIMCompletionRequest{}

	err = json.Unmarshal(data, &varFIMCompletionRequest)

	if err != nil {
		return err
	}

	*o = FIMCompletionRequest(varFIMCompletionRequest)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "model")
		delete(additionalProperties, "temperature")
		delete(additionalProperties, "top_p")
		delete(additionalProperties, "max_tokens")
		delete(additionalProperties, "stream")
		delete(additionalProperties, "stop")
		delete(additionalProperties, "random_seed")
		delete(additionalProperties, "prompt")
		delete(additionalProperties, "suffix")
		delete(additionalProperties, "min_tokens")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableFIMCompletionRequest struct {
	value *FIMCompletionRequest
	isSet bool
}

func (v NullableFIMCompletionRequest) Get() *FIMCompletionRequest {
	return v.value
}

func (v *NullableFIMCompletionRequest) Set(val *FIMCompletionRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableFIMCompletionRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableFIMCompletionRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFIMCompletionRequest(val *FIMCompletionRequest) *NullableFIMCompletionRequest {
	return &NullableFIMCompletionRequest{value: val, isSet: true}
}

func (v NullableFIMCompletionRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFIMCompletionRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


