/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
)

// checks if the ChatCompletionResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChatCompletionResponse{}

// ChatCompletionResponse struct for ChatCompletionResponse
type ChatCompletionResponse struct {
	Id *string `json:"id,omitempty"`
	Object *string `json:"object,omitempty"`
	Model *string `json:"model,omitempty"`
	Usage *UsageInfo `json:"usage,omitempty"`
	Created *int32 `json:"created,omitempty"`
	Choices []ChatCompletionChoice `json:"choices,omitempty"`
}

// NewChatCompletionResponse instantiates a new ChatCompletionResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChatCompletionResponse() *ChatCompletionResponse {
	this := ChatCompletionResponse{}
	return &this
}

// NewChatCompletionResponseWithDefaults instantiates a new ChatCompletionResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChatCompletionResponseWithDefaults() *ChatCompletionResponse {
	this := ChatCompletionResponse{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ChatCompletionResponse) SetId(v string) {
	o.Id = &v
}

// GetObject returns the Object field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetObject() string {
	if o == nil || IsNil(o.Object) {
		var ret string
		return ret
	}
	return *o.Object
}

// GetObjectOk returns a tuple with the Object field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetObjectOk() (*string, bool) {
	if o == nil || IsNil(o.Object) {
		return nil, false
	}
	return o.Object, true
}

// HasObject returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasObject() bool {
	if o != nil && !IsNil(o.Object) {
		return true
	}

	return false
}

// SetObject gets a reference to the given string and assigns it to the Object field.
func (o *ChatCompletionResponse) SetObject(v string) {
	o.Object = &v
}

// GetModel returns the Model field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetModel() string {
	if o == nil || IsNil(o.Model) {
		var ret string
		return ret
	}
	return *o.Model
}

// GetModelOk returns a tuple with the Model field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetModelOk() (*string, bool) {
	if o == nil || IsNil(o.Model) {
		return nil, false
	}
	return o.Model, true
}

// HasModel returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasModel() bool {
	if o != nil && !IsNil(o.Model) {
		return true
	}

	return false
}

// SetModel gets a reference to the given string and assigns it to the Model field.
func (o *ChatCompletionResponse) SetModel(v string) {
	o.Model = &v
}

// GetUsage returns the Usage field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetUsage() UsageInfo {
	if o == nil || IsNil(o.Usage) {
		var ret UsageInfo
		return ret
	}
	return *o.Usage
}

// GetUsageOk returns a tuple with the Usage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetUsageOk() (*UsageInfo, bool) {
	if o == nil || IsNil(o.Usage) {
		return nil, false
	}
	return o.Usage, true
}

// HasUsage returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasUsage() bool {
	if o != nil && !IsNil(o.Usage) {
		return true
	}

	return false
}

// SetUsage gets a reference to the given UsageInfo and assigns it to the Usage field.
func (o *ChatCompletionResponse) SetUsage(v UsageInfo) {
	o.Usage = &v
}

// GetCreated returns the Created field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetCreated() int32 {
	if o == nil || IsNil(o.Created) {
		var ret int32
		return ret
	}
	return *o.Created
}

// GetCreatedOk returns a tuple with the Created field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetCreatedOk() (*int32, bool) {
	if o == nil || IsNil(o.Created) {
		return nil, false
	}
	return o.Created, true
}

// HasCreated returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasCreated() bool {
	if o != nil && !IsNil(o.Created) {
		return true
	}

	return false
}

// SetCreated gets a reference to the given int32 and assigns it to the Created field.
func (o *ChatCompletionResponse) SetCreated(v int32) {
	o.Created = &v
}

// GetChoices returns the Choices field value if set, zero value otherwise.
func (o *ChatCompletionResponse) GetChoices() []ChatCompletionChoice {
	if o == nil || IsNil(o.Choices) {
		var ret []ChatCompletionChoice
		return ret
	}
	return o.Choices
}

// GetChoicesOk returns a tuple with the Choices field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChatCompletionResponse) GetChoicesOk() ([]ChatCompletionChoice, bool) {
	if o == nil || IsNil(o.Choices) {
		return nil, false
	}
	return o.Choices, true
}

// HasChoices returns a boolean if a field has been set.
func (o *ChatCompletionResponse) HasChoices() bool {
	if o != nil && !IsNil(o.Choices) {
		return true
	}

	return false
}

// SetChoices gets a reference to the given []ChatCompletionChoice and assigns it to the Choices field.
func (o *ChatCompletionResponse) SetChoices(v []ChatCompletionChoice) {
	o.Choices = v
}

func (o ChatCompletionResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChatCompletionResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Object) {
		toSerialize["object"] = o.Object
	}
	if !IsNil(o.Model) {
		toSerialize["model"] = o.Model
	}
	if !IsNil(o.Usage) {
		toSerialize["usage"] = o.Usage
	}
	if !IsNil(o.Created) {
		toSerialize["created"] = o.Created
	}
	if !IsNil(o.Choices) {
		toSerialize["choices"] = o.Choices
	}
	return toSerialize, nil
}

type NullableChatCompletionResponse struct {
	value *ChatCompletionResponse
	isSet bool
}

func (v NullableChatCompletionResponse) Get() *ChatCompletionResponse {
	return v.value
}

func (v *NullableChatCompletionResponse) Set(val *ChatCompletionResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableChatCompletionResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableChatCompletionResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChatCompletionResponse(val *ChatCompletionResponse) *NullableChatCompletionResponse {
	return &NullableChatCompletionResponse{value: val, isSet: true}
}

func (v NullableChatCompletionResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChatCompletionResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


