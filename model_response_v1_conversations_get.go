/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)


// ResponseV1ConversationsGet struct for ResponseV1ConversationsGet
type ResponseV1ConversationsGet struct {
	AgentConversation *AgentConversation
	ModelConversation *ModelConversation
}

// Unmarshal JSON data into any of the pointers in the struct
func (dst *ResponseV1ConversationsGet) UnmarshalJSON(data []byte) error {
	var err error
	// try to unmarshal JSON data into AgentConversation
	err = json.Unmarshal(data, &dst.AgentConversation);
	if err == nil {
		jsonAgentConversation, _ := json.Marshal(dst.AgentConversation)
		if string(jsonAgentConversation) == "{}" { // empty struct
			dst.AgentConversation = nil
		} else {
			return nil // data stored in dst.AgentConversation, return on the first match
		}
	} else {
		dst.AgentConversation = nil
	}

	// try to unmarshal JSON data into ModelConversation
	err = json.Unmarshal(data, &dst.ModelConversation);
	if err == nil {
		jsonModelConversation, _ := json.Marshal(dst.ModelConversation)
		if string(jsonModelConversation) == "{}" { // empty struct
			dst.ModelConversation = nil
		} else {
			return nil // data stored in dst.ModelConversation, return on the first match
		}
	} else {
		dst.ModelConversation = nil
	}

	return fmt.Errorf("data failed to match schemas in anyOf(ResponseV1ConversationsGet)")
}

// Marshal data from the first non-nil pointers in the struct to JSON
func (src ResponseV1ConversationsGet) MarshalJSON() ([]byte, error) {
	if src.AgentConversation != nil {
		return json.Marshal(&src.AgentConversation)
	}

	if src.ModelConversation != nil {
		return json.Marshal(&src.ModelConversation)
	}

	return nil, nil // no data in anyOf schemas
}


type NullableResponseV1ConversationsGet struct {
	value *ResponseV1ConversationsGet
	isSet bool
}

func (v NullableResponseV1ConversationsGet) Get() *ResponseV1ConversationsGet {
	return v.value
}

func (v *NullableResponseV1ConversationsGet) Set(val *ResponseV1ConversationsGet) {
	v.value = val
	v.isSet = true
}

func (v NullableResponseV1ConversationsGet) IsSet() bool {
	return v.isSet
}

func (v *NullableResponseV1ConversationsGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResponseV1ConversationsGet(val *ResponseV1ConversationsGet) *NullableResponseV1ConversationsGet {
	return &NullableResponseV1ConversationsGet{value: val, isSet: true}
}

func (v NullableResponseV1ConversationsGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResponseV1ConversationsGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


