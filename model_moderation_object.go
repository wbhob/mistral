/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
)

// checks if the ModerationObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ModerationObject{}

// ModerationObject struct for ModerationObject
type ModerationObject struct {
	// Moderation result thresholds
	Categories map[string]bool `json:"categories,omitempty"`
	// Moderation result
	CategoryScores map[string]float32 `json:"category_scores,omitempty"`
}

// NewModerationObject instantiates a new ModerationObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewModerationObject() *ModerationObject {
	this := ModerationObject{}
	return &this
}

// NewModerationObjectWithDefaults instantiates a new ModerationObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewModerationObjectWithDefaults() *ModerationObject {
	this := ModerationObject{}
	return &this
}

// GetCategories returns the Categories field value if set, zero value otherwise.
func (o *ModerationObject) GetCategories() map[string]bool {
	if o == nil || IsNil(o.Categories) {
		var ret map[string]bool
		return ret
	}
	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModerationObject) GetCategoriesOk() (map[string]bool, bool) {
	if o == nil || IsNil(o.Categories) {
		return map[string]bool{}, false
	}
	return o.Categories, true
}

// HasCategories returns a boolean if a field has been set.
func (o *ModerationObject) HasCategories() bool {
	if o != nil && !IsNil(o.Categories) {
		return true
	}

	return false
}

// SetCategories gets a reference to the given map[string]bool and assigns it to the Categories field.
func (o *ModerationObject) SetCategories(v map[string]bool) {
	o.Categories = v
}

// GetCategoryScores returns the CategoryScores field value if set, zero value otherwise.
func (o *ModerationObject) GetCategoryScores() map[string]float32 {
	if o == nil || IsNil(o.CategoryScores) {
		var ret map[string]float32
		return ret
	}
	return o.CategoryScores
}

// GetCategoryScoresOk returns a tuple with the CategoryScores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ModerationObject) GetCategoryScoresOk() (map[string]float32, bool) {
	if o == nil || IsNil(o.CategoryScores) {
		return map[string]float32{}, false
	}
	return o.CategoryScores, true
}

// HasCategoryScores returns a boolean if a field has been set.
func (o *ModerationObject) HasCategoryScores() bool {
	if o != nil && !IsNil(o.CategoryScores) {
		return true
	}

	return false
}

// SetCategoryScores gets a reference to the given map[string]float32 and assigns it to the CategoryScores field.
func (o *ModerationObject) SetCategoryScores(v map[string]float32) {
	o.CategoryScores = v
}

func (o ModerationObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ModerationObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Categories) {
		toSerialize["categories"] = o.Categories
	}
	if !IsNil(o.CategoryScores) {
		toSerialize["category_scores"] = o.CategoryScores
	}
	return toSerialize, nil
}

type NullableModerationObject struct {
	value *ModerationObject
	isSet bool
}

func (v NullableModerationObject) Get() *ModerationObject {
	return v.value
}

func (v *NullableModerationObject) Set(val *ModerationObject) {
	v.value = val
	v.isSet = true
}

func (v NullableModerationObject) IsSet() bool {
	return v.isSet
}

func (v *NullableModerationObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableModerationObject(val *ModerationObject) *NullableModerationObject {
	return &NullableModerationObject{value: val, isSet: true}
}

func (v NullableModerationObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableModerationObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


