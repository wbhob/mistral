/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 0.0.2
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)

// ApiEndpoint the model 'ApiEndpoint'
type ApiEndpoint string

// List of ApiEndpoint
const (
	APIENDPOINT_V1_CHAT_COMPLETIONS ApiEndpoint = "/v1/chat/completions"
	APIENDPOINT_V1_EMBEDDINGS ApiEndpoint = "/v1/embeddings"
	APIENDPOINT_V1_FIM_COMPLETIONS ApiEndpoint = "/v1/fim/completions"
	APIENDPOINT_V1_MODERATIONS ApiEndpoint = "/v1/moderations"
	APIENDPOINT_V1_CHAT_MODERATIONS ApiEndpoint = "/v1/chat/moderations"
)

// All allowed values of ApiEndpoint enum
var AllowedApiEndpointEnumValues = []ApiEndpoint{
	"/v1/chat/completions",
	"/v1/embeddings",
	"/v1/fim/completions",
	"/v1/moderations",
	"/v1/chat/moderations",
}

func (v *ApiEndpoint) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ApiEndpoint(value)
	for _, existing := range AllowedApiEndpointEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ApiEndpoint", value)
}

// NewApiEndpointFromValue returns a pointer to a valid ApiEndpoint
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewApiEndpointFromValue(v string) (*ApiEndpoint, error) {
	ev := ApiEndpoint(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ApiEndpoint: valid values are %v", v, AllowedApiEndpointEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ApiEndpoint) IsValid() bool {
	for _, existing := range AllowedApiEndpointEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ApiEndpoint value
func (v ApiEndpoint) Ptr() *ApiEndpoint {
	return &v
}

type NullableApiEndpoint struct {
	value *ApiEndpoint
	isSet bool
}

func (v NullableApiEndpoint) Get() *ApiEndpoint {
	return v.value
}

func (v *NullableApiEndpoint) Set(val *ApiEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableApiEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableApiEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableApiEndpoint(val *ApiEndpoint) *NullableApiEndpoint {
	return &NullableApiEndpoint{value: val, isSet: true}
}

func (v NullableApiEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableApiEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

