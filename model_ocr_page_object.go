/*
Mistral AI API

Our Chat Completion and Embeddings APIs specification. Create your account on [La Plateforme](https://console.mistral.ai) to get access and read the [docs](https://docs.mistral.ai) to learn how to use it.

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package mistral

import (
	"encoding/json"
	"fmt"
)

// checks if the OCRPageObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &OCRPageObject{}

// OCRPageObject struct for OCRPageObject
type OCRPageObject struct {
	// The page index in a pdf document starting from 0
	Index int32 `json:"index"`
	// The markdown string response of the page
	Markdown string `json:"markdown"`
	// List of all extracted images in the page
	Images []OCRImageObject `json:"images"`
	Dimensions NullableOCRPageDimensions `json:"dimensions"`
	AdditionalProperties map[string]interface{}
}

type _OCRPageObject OCRPageObject

// NewOCRPageObject instantiates a new OCRPageObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOCRPageObject(index int32, markdown string, images []OCRImageObject, dimensions NullableOCRPageDimensions) *OCRPageObject {
	this := OCRPageObject{}
	this.Index = index
	this.Markdown = markdown
	this.Images = images
	this.Dimensions = dimensions
	return &this
}

// NewOCRPageObjectWithDefaults instantiates a new OCRPageObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOCRPageObjectWithDefaults() *OCRPageObject {
	this := OCRPageObject{}
	return &this
}

// GetIndex returns the Index field value
func (o *OCRPageObject) GetIndex() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Index
}

// GetIndexOk returns a tuple with the Index field value
// and a boolean to check if the value has been set.
func (o *OCRPageObject) GetIndexOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Index, true
}

// SetIndex sets field value
func (o *OCRPageObject) SetIndex(v int32) {
	o.Index = v
}

// GetMarkdown returns the Markdown field value
func (o *OCRPageObject) GetMarkdown() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Markdown
}

// GetMarkdownOk returns a tuple with the Markdown field value
// and a boolean to check if the value has been set.
func (o *OCRPageObject) GetMarkdownOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Markdown, true
}

// SetMarkdown sets field value
func (o *OCRPageObject) SetMarkdown(v string) {
	o.Markdown = v
}

// GetImages returns the Images field value
func (o *OCRPageObject) GetImages() []OCRImageObject {
	if o == nil {
		var ret []OCRImageObject
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *OCRPageObject) GetImagesOk() ([]OCRImageObject, bool) {
	if o == nil {
		return nil, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *OCRPageObject) SetImages(v []OCRImageObject) {
	o.Images = v
}

// GetDimensions returns the Dimensions field value
// If the value is explicit nil, the zero value for OCRPageDimensions will be returned
func (o *OCRPageObject) GetDimensions() OCRPageDimensions {
	if o == nil || o.Dimensions.Get() == nil {
		var ret OCRPageDimensions
		return ret
	}

	return *o.Dimensions.Get()
}

// GetDimensionsOk returns a tuple with the Dimensions field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *OCRPageObject) GetDimensionsOk() (*OCRPageDimensions, bool) {
	if o == nil {
		return nil, false
	}
	return o.Dimensions.Get(), o.Dimensions.IsSet()
}

// SetDimensions sets field value
func (o *OCRPageObject) SetDimensions(v OCRPageDimensions) {
	o.Dimensions.Set(&v)
}

func (o OCRPageObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o OCRPageObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["index"] = o.Index
	toSerialize["markdown"] = o.Markdown
	toSerialize["images"] = o.Images
	toSerialize["dimensions"] = o.Dimensions.Get()

	for key, value := range o.AdditionalProperties {
		toSerialize[key] = value
	}

	return toSerialize, nil
}

func (o *OCRPageObject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"index",
		"markdown",
		"images",
		"dimensions",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varOCRPageObject := _OCRPageObject{}

	err = json.Unmarshal(data, &varOCRPageObject)

	if err != nil {
		return err
	}

	*o = OCRPageObject(varOCRPageObject)

	additionalProperties := make(map[string]interface{})

	if err = json.Unmarshal(data, &additionalProperties); err == nil {
		delete(additionalProperties, "index")
		delete(additionalProperties, "markdown")
		delete(additionalProperties, "images")
		delete(additionalProperties, "dimensions")
		o.AdditionalProperties = additionalProperties
	}

	return err
}

type NullableOCRPageObject struct {
	value *OCRPageObject
	isSet bool
}

func (v NullableOCRPageObject) Get() *OCRPageObject {
	return v.value
}

func (v *NullableOCRPageObject) Set(val *OCRPageObject) {
	v.value = val
	v.isSet = true
}

func (v NullableOCRPageObject) IsSet() bool {
	return v.isSet
}

func (v *NullableOCRPageObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOCRPageObject(val *OCRPageObject) *NullableOCRPageObject {
	return &NullableOCRPageObject{value: val, isSet: true}
}

func (v NullableOCRPageObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOCRPageObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


